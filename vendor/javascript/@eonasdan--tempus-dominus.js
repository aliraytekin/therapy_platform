// @eonasdan/tempus-dominus@6.10.4 downloaded from https://ga.jspm.io/npm:@eonasdan/tempus-dominus@6.10.4/dist/js/tempus-dominus.esm.js

class TdError extends Error{}class ErrorMessages{constructor(){this.base="TD:";this.failedToSetInvalidDate="Failed to set invalid date";this.failedToParseInput="Failed parse input field"}
/**
     * Throws an error indicating that a key in the options object is invalid.
     * @param optionName
     */
unexpectedOption(e){const t=new TdError(`${this.base} Unexpected option: ${e} does not match a known option.`);t.code=1;throw t}
/**
     * Throws an error indicating that one more keys in the options object is invalid.
     * @param optionName
     */unexpectedOptions(e){const t=new TdError(`${this.base}: ${e.join(", ")}`);t.code=1;throw t}
/**
     * Throws an error when an option is provide an unsupported value.
     * For example a value of 'cheese' for toolbarPlacement which only supports
     * 'top', 'bottom', 'default'.
     * @param optionName
     * @param badValue
     * @param validOptions
     */unexpectedOptionValue(e,t,s){const i=new TdError(`${this.base} Unexpected option value: ${e} does not accept a value of "${t}". Valid values are: ${s.join(", ")}`);i.code=2;throw i}
/**
     * Throws an error when an option value is the wrong type.
     * For example a string value was provided to multipleDates which only
     * supports true or false.
     * @param optionName
     * @param badType
     * @param expectedType
     */typeMismatch(e,t,s){const i=new TdError(`${this.base} Mismatch types: ${e} has a type of ${t} instead of the required ${s}`);i.code=3;throw i}
/**
     * Throws an error when an option value is  outside of the expected range.
     * For example restrictions.daysOfWeekDisabled excepts a value between 0 and 6.
     * @param optionName
     * @param lower
     * @param upper
     */numbersOutOfRange(e,t,s){const i=new TdError(`${this.base} ${e} expected an array of number between ${t} and ${s}.`);i.code=4;throw i}
/**
     * Throws an error when a value for a date options couldn't be parsed. Either
     * the option was an invalid string or an invalid Date object.
     * @param optionName
     * @param date
     * @param soft If true, logs a warning instead of an error.
     */
failedToParseDate(e,t,s=false){const i=new TdError(`${this.base} Could not correctly parse "${t}" to a date for ${e}.`);i.code=5;if(!s)throw i;console.warn(i)}mustProvideElement(){const e=new TdError(`${this.base} No element was provided.`);e.code=6;throw e}subscribeMismatch(){const e=new TdError(`${this.base} The subscribed events does not match the number of callbacks`);e.code=7;throw e}conflictingConfiguration(e){const t=new TdError(`${this.base} A configuration value conflicts with another rule. ${e}`);t.code=8;throw t}customDateFormatError(e){const t=new TdError(`${this.base} Custom Date Format: ${e}`);t.code=9;throw t}dateString(){console.warn(`${this.base} Using a string for date options is not recommended unless you specify an ISO string or use the customDateFormat plugin.`)}deprecatedWarning(e,t){console.warn(`${this.base} Warning ${e} is deprecated and will be removed in a future version. ${t}`)}throwError(e){const t=new TdError(`${this.base} ${e}`);t.code=9;throw t}}const e="tempus-dominus",t="td";class Events{constructor(){this.key=`.${t}`;this.change=`change${this.key}`;this.update=`update${this.key}`;this.error=`error${this.key}`;this.show=`show${this.key}`;this.hide=`hide${this.key}`;this.blur=`blur${this.key}`;this.focus=`focus${this.key}`;this.keyup=`keyup${this.key}`;this.keydown=`keydown${this.key}`}}class Css{constructor(){this.widget=`${e}-widget`;this.calendarHeader="calendar-header";this.switch="picker-switch";this.toolbar="toolbar";this.noHighlight="no-highlight";this.sideBySide="timepicker-sbs";this.previous="previous";this.next="next";this.disabled="disabled";this.old="old";this.new="new";this.active="active";this.dateContainer="date-container";this.decadesContainer=`${this.dateContainer}-decades`;this.decade="decade";this.yearsContainer=`${this.dateContainer}-years`;this.year="year";this.monthsContainer=`${this.dateContainer}-months`;this.month="month";this.daysContainer=`${this.dateContainer}-days`;this.day="day";this.calendarWeeks="cw";this.dayOfTheWeek="dow";this.today="today";this.weekend="weekend";this.rangeIn="range-in";this.rangeStart="range-start";this.rangeEnd="range-end";this.timeContainer="time-container";this.separator="separator";this.clockContainer=`${this.timeContainer}-clock`;this.hourContainer=`${this.timeContainer}-hour`;this.minuteContainer=`${this.timeContainer}-minute`;this.secondContainer=`${this.timeContainer}-second`;this.hour="hour";this.minute="minute";this.second="second";this.toggleMeridiem="toggleMeridiem";this.show="show";this.collapsing="td-collapsing";this.collapse="td-collapse";this.inline="inline";this.lightTheme="light";this.darkTheme="dark";this.isDarkPreferredQuery="(prefers-color-scheme: dark)"}}class Namespace{}Namespace.NAME=e;Namespace.dataKey=t;Namespace.events=new Events;Namespace.css=new Css;Namespace.errorMessages=new ErrorMessages;const s={dateFormats:{LTS:"h:mm:ss T",LT:"h:mm T",L:"MM/dd/yyyy",LL:"MMMM d, yyyy",LLL:"MMMM d, yyyy h:mm T",LLLL:"dddd, MMMM d, yyyy h:mm T"},format:"L LT",locale:"default",hourCycle:void 0,ordinal:e=>{const t=["th","st","nd","rd"];const s=e%100;return`[${e}${t[(s-20)%10]||t[s]||t[0]}]`}};var i={...s};var a;(function(e){e.seconds="seconds";e.minutes="minutes";e.hours="hours";e.date="date";e.month="month";e.year="year"})(a||(a={}));const o={month:"2-digit",day:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit",second:"2-digit"};
/**
 * Returns an Intl format object based on the provided object
 * @param unit
 */const n=e=>{switch(e){case"date":return{dateStyle:"short"};case"month":return{month:"numeric",year:"numeric"};case"year":return{year:"numeric"}}};
/**
 * Attempts to guess the hour cycle of the given local
 * @param locale
 */const r=e=>{if(!e)return"h12";const t={hour:"2-digit",minute:"2-digit",numberingSystem:"latn"};const s=(new DateTime).setLocalization({locale:e});s.hours=0;const i=s.parts(void 0,t).hour;if(i==="12")return"h12";if(i==="24")return"h24";s.hours=23;const a=s.parts(void 0,t).hour;if(i==="00"&&a==="11")return"h11";if(i==="00"&&a==="23")return"h23";console.warn(`couldn't determine hour cycle for ${e}. start: ${i}. end: ${a}`)};class DateTime extends Date{constructor(){super(...arguments);this.localization=i;this.nonLeapLadder=[0,31,59,90,120,151,181,212,243,273,304,334];this.leapLadder=[0,31,60,91,121,152,182,213,244,274,305,335];this.dateTimeRegex=/(\[[^[\]]*])|y{1,4}|M{1,4}|d{1,4}|H{1,2}|h{1,2}|t|T|m{1,2}|s{1,2}|f{3}/g;this.formattingTokens=/(\[[^[\]]*])|([-_:/.,()\s]+)|(T|t|yyyy|yy?|MM?M?M?|Do|dd?d?d?|hh?|HH?|mm?|ss?)/g;this.match2=/\d\d/;this.match3=/\d{3}/;this.match4=/\d{4}/;this.match1to2=/\d\d?/;this.matchSigned=/[+-]?\d+/;this.matchOffset=/[+-]\d\d:?(\d\d)?|Z/;this.matchWord=/[^\d_:/,\-()\s]+/;this.zoneExpressions=[this.matchOffset,(e,t)=>{e.offset=this.offsetFromString(t)}];this.expressions={t:{pattern:void 0,parser:(e,t)=>{e.afternoon=this.meridiemMatch(t)}},T:{pattern:void 0,parser:(e,t)=>{e.afternoon=this.meridiemMatch(t)}},fff:{pattern:this.match3,parser:(e,t)=>{e.milliseconds=+t}},s:{pattern:this.match1to2,parser:this.addInput("seconds")},ss:{pattern:this.match1to2,parser:this.addInput("seconds")},m:{pattern:this.match1to2,parser:this.addInput("minutes")},mm:{pattern:this.match1to2,parser:this.addInput("minutes")},H:{pattern:this.match1to2,parser:this.addInput("hours")},h:{pattern:this.match1to2,parser:this.addInput("hours")},HH:{pattern:this.match1to2,parser:this.addInput("hours")},hh:{pattern:this.match1to2,parser:this.addInput("hours")},d:{pattern:this.match1to2,parser:this.addInput("day")},dd:{pattern:this.match2,parser:this.addInput("day")},Do:{pattern:this.matchWord,parser:(e,t)=>{e.day=+(t.match(/\d+/)[0]||1);if(this.localization.ordinal)for(let s=1;s<=31;s+=1)this.localization.ordinal(s).replace(/[[\]]/g,"")===t&&(e.day=s)}},M:{pattern:this.match1to2,parser:this.addInput("month")},MM:{pattern:this.match2,parser:this.addInput("month")},MMM:{pattern:this.matchWord,parser:(e,t)=>{const s=this.getAllMonths();const i=this.getAllMonths("short");const a=(i||s.map((e=>e.slice(0,3)))).indexOf(t)+1;if(a<1)throw new Error;e.month=a%12||a}},MMMM:{pattern:this.matchWord,parser:(e,t)=>{const s=this.getAllMonths();const i=s.indexOf(t)+1;if(i<1)throw new Error;e.month=i%12||i}},y:{pattern:this.matchSigned,parser:this.addInput("year")},yy:{pattern:this.match2,parser:(e,t)=>{e.year=this.parseTwoDigitYear(+t)}},yyyy:{pattern:this.match4,parser:this.addInput("year")}}}
/**
     * Chainable way to set the {@link locale}
     * @param value
     * @deprecated use setLocalization with a FormatLocalization object instead
     */setLocale(e){if(!this.localization){this.localization=i;this.localization.locale=e}return this}
/**
     * Chainable way to set the {@link localization}
     * @param value
     */setLocalization(e){this.localization=e;return this}
/**
     * Converts a plain JS date object to a DateTime object.
     * Doing this allows access to format, etc.
     * @param  date
     * @param locale this parameter is deprecated. Use formatLocalization instead.
     * @param formatLocalization
     */static convert(e,t="default",s=void 0){if(!e)throw new Error("A date is required");if(!s){s=i;s.locale=t}return new DateTime(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()).setLocalization(s)}get clone(){return new DateTime(this.year,this.month,this.date,this.hours,this.minutes,this.seconds,this.getMilliseconds()).setLocalization(this.localization)}static isValid(e){return e!==void 0&&JSON.stringify(e)!=="null"&&e.constructor.name===DateTime.name}
/**
     * Sets the current date to the start of the {@link unit} provided
     * Example: Consider a date of "April 30, 2021, 11:45:32.984 AM" => new DateTime(2021, 3, 30, 11, 45, 32, 984).startOf('month')
     * would return April 1, 2021, 12:00:00.000 AM (midnight)
     * @param unit
     * @param startOfTheWeek Allows for the changing the start of the week.
     */startOf(e,t=0){if(this[e]===void 0)throw new Error(`Unit '${e}' is not valid`);switch(e){case"seconds":this.setMilliseconds(0);break;case"minutes":this.setSeconds(0,0);break;case"hours":this.setMinutes(0,0,0);break;case"date":this.setHours(0,0,0,0);break;case"weekDay":{this.startOf(a.date);if(this.weekDay===t)break;const e=(this.weekDay-t+7)%7;this.manipulate(e*-1,a.date);break}case"month":this.startOf(a.date);this.setDate(1);break;case"year":this.startOf(a.date);this.setMonth(0,1);break}return this}
/**
     * Sets the current date to the end of the {@link unit} provided
     * Example: Consider a date of "April 30, 2021, 11:45:32.984 AM" => new DateTime(2021, 3, 30, 11, 45, 32, 984).endOf('month')
     * would return April 30, 2021, 11:59:59.999 PM
     * @param unit
     * @param startOfTheWeek
     */endOf(e,t=0){if(this[e]===void 0)throw new Error(`Unit '${e}' is not valid`);switch(e){case"seconds":this.setMilliseconds(999);break;case"minutes":this.setSeconds(59,999);break;case"hours":this.setMinutes(59,59,999);break;case"date":this.setHours(23,59,59,999);break;case"weekDay":{this.endOf(a.date);const e=6+t;if(this.weekDay===e)break;this.manipulate(e-this.weekDay,a.date);break}case"month":this.endOf(a.date);this.manipulate(1,a.month);this.setDate(0);break;case"year":this.endOf(a.date);this.setMonth(11,31);break}return this}
/**
     * Change a {@link unit} value. Value can be positive or negative
     * Example: Consider a date of "April 30, 2021, 11:45:32.984 AM" => new DateTime(2021, 3, 30, 11, 45, 32, 984).manipulate(1, 'month')
     * would return May 30, 2021, 11:45:32.984 AM
     * @param value A positive or negative number
     * @param unit
     */manipulate(e,t){if(this[t]===void 0)throw new Error(`Unit '${t}' is not valid`);this[t]+=e;return this}
/**
     * Return true if {@link compare} is before this date
     * @param compare The Date/DateTime to compare
     * @param unit If provided, uses {@link startOf} for
     * comparison.
     */isBefore(e,t){if(!DateTime.isValid(e))return false;if(!t)return this.valueOf()<e.valueOf();if(this[t]===void 0)throw new Error(`Unit '${t}' is not valid`);return this.clone.startOf(t).valueOf()<e.clone.startOf(t).valueOf()}
/**
     * Return true if {@link compare} is after this date
     * @param compare The Date/DateTime to compare
     * @param unit If provided, uses {@link startOf} for
     * comparison.
     */isAfter(e,t){if(!DateTime.isValid(e))return false;if(!t)return this.valueOf()>e.valueOf();if(this[t]===void 0)throw new Error(`Unit '${t}' is not valid`);return this.clone.startOf(t).valueOf()>e.clone.startOf(t).valueOf()}
/**
     * Return true if {@link compare} is same this date
     * @param compare The Date/DateTime to compare
     * @param unit If provided, uses {@link startOf} for
     * comparison.
     */isSame(e,t){if(!DateTime.isValid(e))return false;if(!t)return this.valueOf()===e.valueOf();if(this[t]===void 0)throw new Error(`Unit '${t}' is not valid`);e=DateTime.convert(e);return this.clone.startOf(t).valueOf()===e.startOf(t).valueOf()}
/**
     * Check if this is between two other DateTimes, optionally looking at unit scale. The match is exclusive.
     * @param left
     * @param right
     * @param unit.
     * @param inclusivity. A [ indicates inclusion of a value. A ( indicates exclusion.
     * If the inclusivity parameter is used, both indicators must be passed.
     */isBetween(e,t,s,i="()"){if(!DateTime.isValid(e)||!DateTime.isValid(t))return false;if(s&&this[s]===void 0)throw new Error(`Unit '${s}' is not valid`);const a=i[0]==="(";const o=i[1]===")";const n=a?this.isAfter(e,s):!this.isBefore(e,s);const r=o?this.isBefore(t,s):!this.isAfter(t,s);return n&&r}
/**
     * Returns flattened object of the date. Does not include literals
     * @param locale
     * @param template
     */parts(e=this.localization.locale,t={dateStyle:"full",timeStyle:"long"}){const s={};new Intl.DateTimeFormat(e,t).formatToParts(this).filter((e=>e.type!=="literal")).forEach((e=>s[e.type]=e.value));return s}get seconds(){return this.getSeconds()}set seconds(e){this.setSeconds(e)}get secondsFormatted(){return this.parts(void 0,o).second}get minutes(){return this.getMinutes()}set minutes(e){this.setMinutes(e)}get minutesFormatted(){return this.parts(void 0,o).minute}get hours(){return this.getHours()}set hours(e){this.setHours(e)}
/**
     * Returns two digit hour, e.g. 01...10
     * @param hourCycle Providing an hour cycle will change 00 to 24 depending on the given value.
     */getHoursFormatted(e="h12"){return this.parts(void 0,{...o,hourCycle:e}).hour}
/**
     * Get the meridiem of the date. E.g. AM or PM.
     * If the {@link locale} provides a "dayPeriod" then this will be returned,
     * otherwise it will return AM or PM.
     * @param locale
     */meridiem(e=this.localization.locale){return new Intl.DateTimeFormat(e,{hour:"numeric",hour12:true}).formatToParts(this).find((e=>e.type==="dayPeriod"))?.value}get date(){return this.getDate()}set date(e){this.setDate(e)}get dateFormatted(){return this.parts(void 0,o).day}get weekDay(){return this.getDay()}get month(){return this.getMonth()}set month(e){const t=new Date(this.year,e+1);t.setDate(0);const s=t.getDate();this.date>s&&(this.date=s);this.setMonth(e)}get monthFormatted(){return this.parts(void 0,o).month}get year(){return this.getFullYear()}set year(e){this.setFullYear(e)}get week(){const e=this.computeOrdinal(),t=this.getUTCDay();let s=Math.floor((e-t+10)/7);s<1?s=this.weeksInWeekYear():s>this.weeksInWeekYear()&&(s=1);return s}weeksInWeekYear(){const e=(this.year+Math.floor(this.year/4)-Math.floor(this.year/100)+Math.floor(this.year/400))%7,t=this.year-1,s=(t+Math.floor(t/4)-Math.floor(t/100)+Math.floor(t/400))%7;return e===4||s===3?53:52}dateToDataValue(){return DateTime.isValid(this)?`${this.year}-${this.month.toString().padStart(2,"0")}-${this.date.toString().padStart(2,"0")}`:""}get isLeapYear(){return this.year%4===0&&(this.year%100!==0||this.year%400===0)}computeOrdinal(){return this.date+(this.isLeapYear?this.leapLadder:this.nonLeapLadder)[this.month]}getAllMonths(e="long"){const t=new Intl.DateTimeFormat(this.localization.locale,{month:e}).format;return[...Array(12).keys()].map((e=>t(new Date(2021,e))))}replaceTokens(e,t){return e.replace(/(\[[^[\]]*])|(LTS?|l{1,4}|L{1,4})/g,((e,s,a)=>{const o=a&&a.toUpperCase();return s||t[o]||i.dateFormats[o]}))}parseTwoDigitYear(e){return e+(e>68?1900:2e3)}offsetFromString(e){if(!e)return 0;if(e==="Z")return 0;const[t,s,i]=e.match(/([+-]|\d\d)/g);const a=60*+s+(+i||0);const o=t==="+"?-a:a;return a===0?0:o}
/**
     * z = -4, zz = -04, zzz = -0400
     * @param date
     * @param style
     * @private
     */zoneInformation(e,t){let s=e.parts(this.localization.locale,{timeZoneName:"longOffset"}).timeZoneName.replace("GMT","").replace(":","");const i=s.includes("-");s=s.replace("-","");t==="z"?s=s.substring(1,2):t==="zz"&&(s=s.substring(0,2));return`${i?"-":""}${s}`}addInput(e){return(t,s)=>{t[e]=+s}}getLocaleAfternoon(){return new Intl.DateTimeFormat(this.localization.locale,{hour:"numeric",hour12:true}).formatToParts(new Date(2022,3,4,13)).find((e=>e.type==="dayPeriod"))?.value?.replace(/\s+/g," ")}meridiemMatch(e){return e.toLowerCase()===this.getLocaleAfternoon().toLowerCase()}correctHours(e){const{afternoon:t}=e;if(t!==void 0){const{hours:s}=e;t?s<12&&(e.hours+=12):s===12&&(e.hours=0);delete e.afternoon}}makeParser(e){e=this.replaceTokens(e,this.localization.dateFormats);const t=e.match(this.formattingTokens);const{length:s}=t;const i=[];for(let e=0;e<s;e+=1){const s=t[e];const a=this.expressions[s];i[e]=a?.parser?a:s.replace(/^\[[^[\]]*]$/g,"")}return e=>{const t={hours:0,minutes:0,seconds:0,milliseconds:0};for(let a=0,o=0;a<s;a+=1){const s=i[a];if(typeof s==="string")o+=s.length;else{const i=e.slice(o);let a=i;if(s.pattern){const e=s.pattern.exec(i);a=e[0]}s.parser.call(this,t,a);e=e.replace(a,"")}}this.correctHours(t);return t}}
/**
     * Attempts to create a DateTime from a string.
     * @param input date as string
     * @param localization provides the date template the string is in via the format property
     */
static fromString(e,t){t?.format||Namespace.errorMessages.customDateFormatError("No format was provided");try{const s=new DateTime;s.setLocalization(t);if(["x","X"].indexOf(t.format)>-1)return new DateTime((t.format==="X"?1e3:1)*+e);e=e.replace(/\s+/g," ");const i=s.makeParser(t.format);const{year:a,month:o,day:n,hours:r,minutes:c,seconds:l,milliseconds:d,zone:h}=i(e);const p=n||(a||o?1:s.getDate());const u=a||s.getFullYear();let m=0;a&&!o||(m=o>0?o-1:s.getMonth());return h?new DateTime(Date.UTC(u,m,p,r,c,l,d+h.offset*60*1e3)):new DateTime(u,m,p,r,c,l,d)}catch(s){Namespace.errorMessages.customDateFormatError(`Unable to parse provided input: ${e}, format: ${t.format}`)}}
/**
     * Returns a string format.
     * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat
     * for valid templates and locale objects
     * @param template An optional object. If provided, method will use Intl., otherwise the localizations format properties
     * @param locale Can be a string or an array of strings. Uses browser defaults otherwise.
     */format(e,t=this.localization.locale){if(e&&typeof e==="object")return new Intl.DateTimeFormat(t,e).format(this);const s=this.replaceTokens(e||this.localization.format||`${i.dateFormats.L}, ${i.dateFormats.LT}`,this.localization.dateFormats);const a=e=>new Intl.DateTimeFormat(this.localization.locale,e).format(this);this.localization.hourCycle||(this.localization.hourCycle=r(this.localization.locale));const o=this.localization.hourCycle.startsWith("h1")?"h24":this.localization.hourCycle;const n=this.localization.hourCycle.startsWith("h2")?"h12":this.localization.hourCycle;const c={y:this.year,yy:a({year:"2-digit"}),yyyy:this.year,M:a({month:"numeric"}),MM:this.monthFormatted,MMM:this.getAllMonths("short")[this.getMonth()],MMMM:this.getAllMonths()[this.getMonth()],d:this.date,dd:this.dateFormatted,ddd:a({weekday:"short"}),dddd:a({weekday:"long"}),H:this.getHours(),HH:this.getHoursFormatted(o),h:this.hours>12?this.hours-12:this.hours,hh:this.getHoursFormatted(n),t:this.meridiem(),T:this.meridiem().toUpperCase(),m:this.minutes,mm:this.minutesFormatted,s:this.seconds,ss:this.secondsFormatted,fff:this.getMilliseconds()};return s.replace(this.dateTimeRegex,((e,t)=>t||c[e])).replace(/\[/g,"").replace(/]/g,"")}}class ServiceLocator{constructor(){this.cache=new Map}locate(e){const t=this.cache.get(e);if(t)return t;const s=new e;this.cache.set(e,s);return s}}const c=()=>{l=new ServiceLocator};let l;const d=[{name:"calendar",className:Namespace.css.daysContainer,unit:a.month,step:1},{name:"months",className:Namespace.css.monthsContainer,unit:a.year,step:1},{name:"years",className:Namespace.css.yearsContainer,unit:a.year,step:10},{name:"decades",className:Namespace.css.decadesContainer,unit:a.year,step:100}];class OptionsStore{constructor(){this._currentCalendarViewMode=0;this._viewDate=new DateTime;this.minimumCalendarViewMode=0;this.currentView="calendar"}get currentCalendarViewMode(){return this._currentCalendarViewMode}set currentCalendarViewMode(e){this._currentCalendarViewMode=e;this.currentView=d[e].name}get viewDate(){return this._viewDate}set viewDate(e){this._viewDate=e;this.options&&(this.options.viewDate=e)}refreshCurrentView(){this.currentView=d[this.currentCalendarViewMode].name}get isTwelveHour(){return["h12","h11"].includes(this.options.localization.hourCycle)}}class Validation{constructor(){this.optionsStore=l.locate(OptionsStore)}
/**
     * Checks to see if the target date is valid based on the rules provided in the options.
     * Granularity can be provided to check portions of the date instead of the whole.
     * @param targetDate
     * @param granularity
     */isValid(e,t){if(!this._enabledDisabledDatesIsValid(t,e))return false;if(t!==a.month&&t!==a.year&&this.optionsStore.options.restrictions.daysOfWeekDisabled?.length>0&&this.optionsStore.options.restrictions.daysOfWeekDisabled.indexOf(e.weekDay)!==-1)return false;if(!this._minMaxIsValid(t,e))return false;if(t===a.hours||t===a.minutes||t===a.seconds){if(!this._enabledDisabledHoursIsValid(e))return false;if(this.optionsStore.options.restrictions.disabledTimeIntervals?.filter((t=>e.isBetween(t.from,t.to))).length!==0)return false}return true}_enabledDisabledDatesIsValid(e,t){return e!==a.date||!(this.optionsStore.options.restrictions.disabledDates.length>0&&this._isInDisabledDates(t))&&!(this.optionsStore.options.restrictions.enabledDates.length>0&&!this._isInEnabledDates(t))}
/**
     * Checks to see if the disabledDates option is in use and returns true (meaning invalid)
     * if the `testDate` is with in the array. Granularity is by date.
     * @param testDate
     * @private
     */_isInDisabledDates(e){return!(!this.optionsStore.options.restrictions.disabledDates||this.optionsStore.options.restrictions.disabledDates.length===0)&&!!this.optionsStore.options.restrictions.disabledDates.find((t=>t.isSame(e,a.date)))}
/**
     * Checks to see if the enabledDates option is in use and returns true (meaning valid)
     * if the `testDate` is with in the array. Granularity is by date.
     * @param testDate
     * @private
     */_isInEnabledDates(e){return!this.optionsStore.options.restrictions.enabledDates||this.optionsStore.options.restrictions.enabledDates.length===0||!!this.optionsStore.options.restrictions.enabledDates.find((t=>t.isSame(e,a.date)))}_minMaxIsValid(e,t){return(!this.optionsStore.options.restrictions.minDate||!t.isBefore(this.optionsStore.options.restrictions.minDate,e))&&(!this.optionsStore.options.restrictions.maxDate||!t.isAfter(this.optionsStore.options.restrictions.maxDate,e))}_enabledDisabledHoursIsValid(e){return!(this.optionsStore.options.restrictions.disabledHours.length>0&&this._isInDisabledHours(e))&&!(this.optionsStore.options.restrictions.enabledHours.length>0&&!this._isInEnabledHours(e))}
/**
     * Checks to see if the disabledHours option is in use and returns true (meaning invalid)
     * if the `testDate` is with in the array. Granularity is by hours.
     * @param testDate
     * @private
     */_isInDisabledHours(e){if(!this.optionsStore.options.restrictions.disabledHours||this.optionsStore.options.restrictions.disabledHours.length===0)return false;const t=e.hours;return this.optionsStore.options.restrictions.disabledHours.includes(t)}
/**
     * Checks to see if the enabledHours option is in use and returns true (meaning valid)
     * if the `testDate` is with in the array. Granularity is by hours.
     * @param testDate
     * @private
     */_isInEnabledHours(e){if(!this.optionsStore.options.restrictions.enabledHours||this.optionsStore.options.restrictions.enabledHours.length===0)return true;const t=e.hours;return this.optionsStore.options.restrictions.enabledHours.includes(t)}dateRangeIsValid(e,t,s){if(!this.optionsStore.options.dateRange)return true;if(e.length!==2&&t!==1)return true;const i=e[0].clone;if(i.isSame(s,a.date))return true;i.manipulate(1,a.date);while(!i.isSame(s,a.date)){const e=this.isValid(i,a.date);if(!e)return false;i.manipulate(1,a.date)}return true}}class EventEmitter{constructor(){this.subscribers=[]}subscribe(e){this.subscribers.push(e);return this.unsubscribe.bind(this,this.subscribers.length-1)}unsubscribe(e){this.subscribers.splice(e,1)}emit(e){this.subscribers.forEach((t=>{t(e)}))}destroy(){this.subscribers=null;this.subscribers=[]}}class EventEmitters{constructor(){this.triggerEvent=new EventEmitter;this.viewUpdate=new EventEmitter;this.updateDisplay=new EventEmitter;this.action=new EventEmitter;this.updateViewDate=new EventEmitter}destroy(){this.triggerEvent.destroy();this.viewUpdate.destroy();this.updateDisplay.destroy();this.action.destroy();this.updateViewDate.destroy()}}const h={clear:"Clear selection",close:"Close the picker",dateFormats:i.dateFormats,dayViewHeaderFormat:{month:"long",year:"2-digit"},decrementHour:"Decrement Hour",decrementMinute:"Decrement Minute",decrementSecond:"Decrement Second",format:i.format,hourCycle:i.hourCycle,incrementHour:"Increment Hour",incrementMinute:"Increment Minute",incrementSecond:"Increment Second",locale:i.locale,maxWeekdayLength:0,nextCentury:"Next Century",nextDecade:"Next Decade",nextMonth:"Next Month",nextYear:"Next Year",ordinal:i.ordinal,pickHour:"Pick Hour",pickMinute:"Pick Minute",pickSecond:"Pick Second",previousCentury:"Previous Century",previousDecade:"Previous Decade",previousMonth:"Previous Month",previousYear:"Previous Year",selectDate:"Select Date",selectDecade:"Select Decade",selectMonth:"Select Month",selectTime:"Select Time",selectYear:"Select Year",startOfTheWeek:0,today:"Go to today",toggleMeridiem:"Toggle Meridiem",toggleAriaLabel:"Change date"};const p={allowInputToggle:false,container:void 0,dateRange:false,debug:false,defaultDate:void 0,display:{icons:{type:"icons",time:"fa-solid fa-clock",date:"fa-solid fa-calendar",up:"fa-solid fa-arrow-up",down:"fa-solid fa-arrow-down",previous:"fa-solid fa-chevron-left",next:"fa-solid fa-chevron-right",today:"fa-solid fa-calendar-check",clear:"fa-solid fa-trash",close:"fa-solid fa-xmark"},sideBySide:false,calendarWeeks:false,viewMode:"calendar",toolbarPlacement:"bottom",keepOpen:false,buttons:{today:false,clear:false,close:false},components:{calendar:true,date:true,month:true,year:true,decades:true,clock:true,hours:true,minutes:true,seconds:false,useTwentyfourHour:void 0},inline:false,theme:"auto",placement:"bottom",keyboardNavigation:true},keepInvalid:false,localization:h,meta:{},multipleDates:false,multipleDatesSeparator:"; ",promptTimeOnDateChange:false,promptTimeOnDateChangeTransitionDelay:200,restrictions:{minDate:void 0,maxDate:void 0,disabledDates:[],enabledDates:[],daysOfWeekDisabled:[],disabledTimeIntervals:[],disabledHours:[],enabledHours:[]},stepping:1,useCurrent:true,viewDate:new DateTime};const u={...h};
/**
 * Attempts to prove `d` is a DateTime or Date or can be converted into one.
 * @param d If a string will attempt creating a date from it.
 * @param localization object containing locale and format settings. Only used with the custom formats
 * @private
 */function m(e,t){if(!e)return null;if(e.constructor.name===DateTime.name)return e;if(e.constructor.name===Date.name)return DateTime.convert(e);if(typeof e==="string"){const s=DateTime.fromString(e,t);return JSON.stringify(s)==="null"?null:s}return null}
/**
 * Attempts to convert `d` to a DateTime object
 * @param d value to convert
 * @param optionName Provides text to error messages e.g. disabledDates
 * @param localization object containing locale and format settings. Only used with the custom formats
 */function y(e,t,s){typeof e==="string"&&t!=="input"&&Namespace.errorMessages.dateString();const i=m(e,s);i||Namespace.errorMessages.failedToParseDate(t,e,t==="input");return i}
/**
 * Type checks that `value` is an array of Date or DateTime
 * @param optionName Provides text to error messages e.g. disabledDates
 * @param value Option value
 * @param providedType Used to provide text to error messages
 * @param localization
 */function g(e,t,s,a=i){Array.isArray(t)||Namespace.errorMessages.typeMismatch(e,s,"array of DateTime or Date");for(let s=0;s<t.length;s++){const i=t[s];const o=y(i,e,a);o.setLocalization(a);t[s]=o}}
/**
 * Type checks that `value` is an array of numbers
 * @param optionName Provides text to error messages e.g. disabledDates
 * @param value Option value
 * @param providedType Used to provide text to error messages
 */function f(e,t,s){Array.isArray(t)&&!t.some((e=>typeof e!=="number"))||Namespace.errorMessages.typeMismatch(e,s,"array of numbers")}function v(e){return({value:t,localization:s})=>{const i=y(t,e,s);if(i!==void 0){i.setLocalization(s);return i}}}function S(e){const t=v(e);return e=>e.value===void 0?e.value:t(e)}function w(e,t,s){return({value:i,providedType:a})=>{if(i===void 0)return[];f(e,i,a);i.some((e=>e<t||e>s))&&Namespace.errorMessages.numbersOutOfRange(e,t,s);return i}}function b(e){return w(e,0,23)}function D(e){return({value:t,providedType:s,localization:i})=>{if(t===void 0)return[];g(e,t,s,i);return t}}function k(e){return({value:t,path:s})=>{e.includes(t)||Namespace.errorMessages.unexpectedOptionValue(s.substring(1),t,e);return t}}const C=Object.freeze({defaultDate:v("defaultDate"),viewDate:v("viewDate"),minDate:S("restrictions.minDate"),maxDate:S("restrictions.maxDate"),disabledHours:b("restrictions.disabledHours"),enabledHours:b("restrictions.enabledHours"),disabledDates:D("restrictions.disabledDates"),enabledDates:D("restrictions.enabledDates"),daysOfWeekDisabled:w("restrictions.daysOfWeekDisabled",0,6),disabledTimeIntervals:({key:e,value:t,providedType:s,localization:i})=>{if(t===void 0)return[];Array.isArray(t)||Namespace.errorMessages.typeMismatch(e,s,"array of { from: DateTime|Date, to: DateTime|Date }");const a=t;for(let t=0;t<a.length;t++)Object.keys(a[t]).forEach((s=>{const o=`${e}[${t}].${s}`;const n=a[t][s];const r=y(n,o,i);r.setLocalization(i);a[t][s]=r}));return a},toolbarPlacement:k(["top","bottom","default"]),type:k(["icons","sprites"]),viewMode:k(["clock","calendar","months","years","decades"]),theme:k(["light","dark","auto"]),placement:k(["top","bottom"]),meta:({value:e})=>e,dayViewHeaderFormat:({value:e})=>e,container:({value:e,path:t})=>{e&&!(e instanceof HTMLElement||e instanceof Element||e?.appendChild)&&Namespace.errorMessages.typeMismatch(t.substring(1),typeof e,"HTMLElement");return e},useTwentyfourHour:({value:e,path:t,providedType:s,defaultType:i})=>{Namespace.errorMessages.deprecatedWarning("useTwentyfourHour",'Please use "options.localization.hourCycle" instead');if(e===void 0||s==="boolean")return e;Namespace.errorMessages.typeMismatch(t,s,i)},hourCycle:k(["h11","h12","h23","h24"])});const _=({value:e,defaultType:t,providedType:s,path:i})=>{switch(t){case"boolean":return e==="true"||e===true;case"number":return+e;case"string":return e.toString();case"object":return{};case"function":return e;default:Namespace.errorMessages.typeMismatch(i,s,t)}};function N(e){return(C[e.key]||_)(e)}class OptionConverter{static deepCopy(e){const t={};Object.keys(e).forEach((s=>{const i=e[s];if(i instanceof DateTime)t[s]=i.clone;else if(i instanceof Date)t[s]=new Date(i.valueOf());else{t[s]=i;typeof i!=="object"||i instanceof HTMLElement||i instanceof Element||Array.isArray(i)||(t[s]=OptionConverter.deepCopy(i))}}));return t}
/**
     * Finds value out of an object based on a string, period delimited, path
     * @param paths
     * @param obj
     */static objectPath(e,t){e.charAt(0)==="."&&(e=e.slice(1));return e?e.split(".").reduce(((e,t)=>OptionConverter.isValue(e)||OptionConverter.isValue(e[t])?e[t]:void 0),t):t}
/**
     * The spread operator caused sub keys to be missing after merging.
     * This is to fix that issue by using spread on the child objects first.
     * Also handles complex options like disabledDates
     * @param provided An option from new providedOptions
     * @param copyTo Destination object. This was added to prevent reference copies
     * @param localization
     * @param path
     */static spread(e,t,s,i=""){const a=OptionConverter.objectPath(i,p);const o=Object.keys(e).filter((e=>!Object.keys(a).includes(e)));if(o.length>0){const e=OptionConverter.getFlattenDefaultOptions();const t=o.map((t=>{const s=i?".":"";let a=`"${i}${s}${t}" is not a known option.`;const o=e.find((e=>e.includes(t)));o&&(a+=` Did you mean "${o}"?`);return a}));Namespace.errorMessages.unexpectedOptions(t)}Object.keys(e).filter((e=>e!=="__proto__"&&e!=="constructor")).forEach((o=>{i+=`.${o}`;i.charAt(0)==="."&&(i=i.slice(1));const n=a[o];const r=typeof e[o];const c=typeof n;const l=e[o];if(l!==void 0&&l!==null){typeof n!=="object"||Array.isArray(e[o])||n instanceof Date||OptionConverter.ignoreProperties.includes(o)?t[o]=OptionConverter.processKey(o,l,r,c,i,s):OptionConverter.spread(e[o],t[o],s,i);i=i.substring(0,i.lastIndexOf(`.${o}`))}else{t[o]=l;i=i.substring(0,i.lastIndexOf(`.${o}`))}}))}static processKey(e,t,s,i,a,o){return N({key:e,value:t,providedType:s,defaultType:i,path:a,localization:o})}static _mergeOptions(e,t){const s=OptionConverter.deepCopy(t);const i=t.localization?.locale!=="default"?t.localization:e?.localization||p.localization;OptionConverter.spread(e,s,i,"");return s}static _dataToOptions(e,t){const s=JSON.parse(JSON.stringify(e.dataset));s?.tdTargetInput&&delete s.tdTargetInput;s?.tdTargetToggle&&delete s.tdTargetToggle;if(!s||Object.keys(s).length===0)return t;const i={};const a=e=>{const t={};Object.keys(e).forEach((e=>{t[e.toLowerCase()]=e}));return t};const o=this.normalizeObject(a);const n=a(t);Object.keys(s).filter((e=>e.startsWith(Namespace.dataKey))).map((e=>e.substring(2))).forEach((e=>{let a=n[e.toLowerCase()];if(e.includes("_")){const r=e.split("_");a=n[r[0].toLowerCase()];a!==void 0&&t[a].constructor===Object&&(i[a]=o(r,1,t[a],s[`td${e}`]))}else a!==void 0&&(i[a]=s[`td${e}`])}));return this._mergeOptions(i,t)}static normalizeObject(e){const t=(s,i,a,o)=>{const n=e(a);const r=n[s[i].toLowerCase()];const c={};if(r===void 0)return c;if(a[r]?.constructor===Object){i++;c[r]=t(s,i,a[r],o)}else c[r]=o;return c};return t}
/**
     * Attempts to prove `d` is a DateTime or Date or can be converted into one.
     * @param d If a string will attempt creating a date from it.
     * @param localization object containing locale and format settings. Only used with the custom formats
     * @private
     */static _dateTypeCheck(e,t){return m(e,t)}
/**
     * Type checks that `value` is an array of Date or DateTime
     * @param optionName Provides text to error messages e.g. disabledDates
     * @param value Option value
     * @param providedType Used to provide text to error messages
     * @param localization
     */static _typeCheckDateArray(e,t,s,i){return g(e,t,s,i)}
/**
     * Type checks that `value` is an array of numbers
     * @param optionName Provides text to error messages e.g. disabledDates
     * @param value Option value
     * @param providedType Used to provide text to error messages
     */static _typeCheckNumberArray(e,t,s){return f(e,t,s)}
/**
     * Attempts to convert `d` to a DateTime object
     * @param d value to convert
     * @param optionName Provides text to error messages e.g. disabledDates
     * @param localization object containing locale and format settings. Only used with the custom formats
     */static dateConversion(e,t,s){return y(e,t,s)}static getFlattenDefaultOptions(){if(this._flattenDefaults)return this._flattenDefaults;const e=(t,s=[])=>Array.isArray(t)?[]:Object(t)===t?Object.entries(t).flatMap((([t,i])=>e(i,[...s,t]))):s.join(".");this._flattenDefaults=e(p);return this._flattenDefaults}
/**
     * Some options conflict like min/max date. Verify that these kinds of options
     * are set correctly.
     * @param config
     */static _validateConflicts(e){!e.display.sideBySide||e.display.components.clock&&(e.display.components.hours||e.display.components.minutes||e.display.components.seconds)||Namespace.errorMessages.conflictingConfiguration("Cannot use side by side mode without the clock components");if(e.restrictions.minDate&&e.restrictions.maxDate){e.restrictions.minDate.isAfter(e.restrictions.maxDate)&&Namespace.errorMessages.conflictingConfiguration("minDate is after maxDate");e.restrictions.maxDate.isBefore(e.restrictions.minDate)&&Namespace.errorMessages.conflictingConfiguration("maxDate is before minDate")}e.multipleDates&&e.dateRange&&Namespace.errorMessages.conflictingConfiguration('Cannot uss option "multipleDates" with "dateRange"')}}OptionConverter.ignoreProperties=["meta","dayViewHeaderFormat","container","dateForms","ordinal"];OptionConverter.isValue=e=>e!=null;class Dates{constructor(){this._dates=[];this.optionsStore=l.locate(OptionsStore);this.validation=l.locate(Validation);this._eventEmitters=l.locate(EventEmitters)}get picked(){return[...this._dates]}get lastPicked(){return this._dates[this.lastPickedIndex]?.clone}get lastPickedIndex(){return this._dates.length===0?0:this._dates.length-1}
/**
     * Formats a DateTime object to a string. Used when setting the input value.
     * @param date
     */formatInput(e){if(!e)return"";e.localization=this.optionsStore.options.localization;return e.format()}parseInput(e){try{return OptionConverter.dateConversion(e,"input",this.optionsStore.options.localization)}catch(t){this._eventEmitters.triggerEvent.emit({type:Namespace.events.error,reason:Namespace.errorMessages.failedToParseInput,format:this.optionsStore.options.localization.format,value:e});return}}
/**
     * Tries to convert the provided value to a DateTime object.
     * If value is null|undefined then clear the value of the provided index (or 0).
     * @param value Value to convert or null|undefined
     * @param index When using multidates this is the index in the array
     */
setFromInput(e,t){if(!e){this.setValue(void 0,t);return}const s=this.parseInput(e);if(s){s.setLocalization(this.optionsStore.options.localization);this.setValue(s,t)}}
/**
     * Adds a new DateTime to selected dates array
     * @param date
     */add(e){this._dates.push(e)}
/**
     * Returns true if the `targetDate` is part of the selected dates array.
     * If `unit` is provided then a granularity to that unit will be used.
     * @param targetDate
     * @param unit
     */isPicked(e,t){if(!DateTime.isValid(e))return false;if(!t)return this._dates.find((t=>t.isSame(e)))!==void 0;const s=n(t);const i=e.format(s);return this._dates.map((e=>e.format(s))).find((e=>e===i))!==void 0}
/**
     * Returns the index at which `targetDate` is in the array.
     * This is used for updating or removing a date when multi-date is used
     * If `unit` is provided then a granularity to that unit will be used.
     * @param targetDate
     * @param unit
     */pickedIndex(e,t){if(!DateTime.isValid(e))return-1;if(!t)return this._dates.map((e=>e.valueOf())).indexOf(e.valueOf());const s=n(t);const i=e.format(s);return this._dates.map((e=>e.format(s))).indexOf(i)}clear(){this.optionsStore.unset=true;this._eventEmitters.triggerEvent.emit({type:Namespace.events.change,date:void 0,oldDate:this.lastPicked,isClear:true,isValid:true});this._dates=[];this.optionsStore.input&&(this.optionsStore.input.value="");this._eventEmitters.updateDisplay.emit("all")}
/**
     * Find the "book end" years given a `year` and a `factor`
     * @param factor e.g. 100 for decades
     * @param year e.g. 2021
     */static getStartEndYear(e,t){const s=e/10,i=Math.floor(t/e)*e,a=i+s*9,o=Math.floor(t/s)*s;return[i,a,o]}updateInput(e){if(!this.optionsStore.input)return;let t=this.formatInput(e);(this.optionsStore.options.multipleDates||this.optionsStore.options.dateRange)&&(t=this._dates.map((e=>this.formatInput(e))).join(this.optionsStore.options.multipleDatesSeparator));this.optionsStore.input.value!=t&&(this.optionsStore.input.value=t)}
/**
     * Attempts to either clear or set the `target` date at `index`.
     * If the `target` is null then the date will be cleared.
     * If multi-date is being used then it will be removed from the array.
     * If `target` is valid and multi-date is used then if `index` is
     * provided the date at that index will be replaced, otherwise it is appended.
     * @param target
     * @param index
     */setValue(e,t){const s=typeof t==="undefined",i=!e&&s;let o=this.optionsStore.unset?null:this._dates[t]?.clone;!o&&!this.optionsStore.unset&&s&&i&&(o=this.lastPicked);if(e&&o?.isSame(e)){this.updateInput(e);return}if(!e){this._setValueNull(i,t,o);return}t=t||0;e=e.clone;if(this.optionsStore.options.stepping!==1){e.minutes=Math.round(e.minutes/this.optionsStore.options.stepping)*this.optionsStore.options.stepping;e.startOf(a.minutes)}const n=s=>{this._dates[t]=e;this._eventEmitters.updateViewDate.emit(e.clone);this.updateInput(e);this.optionsStore.unset=false;this._eventEmitters.updateDisplay.emit("all");this._eventEmitters.triggerEvent.emit({type:Namespace.events.change,date:e,oldDate:o,isClear:i,isValid:s})};if(this.validation.isValid(e)&&this.validation.dateRangeIsValid(this.picked,t,e))n(true);else{this.optionsStore.options.keepInvalid&&n(false);this._eventEmitters.triggerEvent.emit({type:Namespace.events.error,reason:Namespace.errorMessages.failedToSetInvalidDate,date:e,oldDate:o})}}_setValueNull(e,t,s){if(!this.optionsStore.options.multipleDates||this._dates.length===1||e){this.optionsStore.unset=true;this._dates=[]}else this._dates.splice(t,1);this.updateInput();this._eventEmitters.triggerEvent.emit({type:Namespace.events.change,date:void 0,oldDate:s,isClear:e,isValid:true});this._eventEmitters.updateDisplay.emit("all")}}var E;(function(e){e.next="next";e.previous="previous";e.changeCalendarView="changeCalendarView";e.selectMonth="selectMonth";e.selectYear="selectYear";e.selectDecade="selectDecade";e.selectDay="selectDay";e.selectHour="selectHour";e.selectMinute="selectMinute";e.selectSecond="selectSecond";e.incrementHours="incrementHours";e.incrementMinutes="incrementMinutes";e.incrementSeconds="incrementSeconds";e.decrementHours="decrementHours";e.decrementMinutes="decrementMinutes";e.decrementSeconds="decrementSeconds";e.toggleMeridiem="toggleMeridiem";e.togglePicker="togglePicker";e.showClock="showClock";e.showHours="showHours";e.showMinutes="showMinutes";e.showSeconds="showSeconds";e.clear="clear";e.close="close";e.today="today"})(E||(E={}));var T=E;class DateDisplay{constructor(){this.optionsStore=l.locate(OptionsStore);this.dates=l.locate(Dates);this.validation=l.locate(Validation)}getPicker(){const e=document.createElement("div");e.classList.add(Namespace.css.daysContainer);e.role="grid";e.append(...this._daysOfTheWeek());if(this.optionsStore.options.display.calendarWeeks){const t=document.createElement("div");t.classList.add(Namespace.css.calendarWeeks,Namespace.css.noHighlight);e.appendChild(t)}const{rangeHoverEvent:t,rangeHoverOutEvent:s}=this.handleMouseEvents(e);for(let i=0;i<42;i++){if(i!==0&&i%7===0&&this.optionsStore.options.display.calendarWeeks){const t=document.createElement("div");t.classList.add(Namespace.css.calendarWeeks,Namespace.css.noHighlight);t.tabIndex=-1;e.appendChild(t)}const a=document.createElement("div");a.setAttribute("data-action",T.selectDay);a.role="gridcell";a.tabIndex=-1;e.appendChild(a);if(matchMedia("(hover: hover)").matches&&this.optionsStore.options.dateRange){a.addEventListener("mouseover",t);a.addEventListener("mouseout",s)}}return e}_update(e,t){const s=e.getElementsByClassName(Namespace.css.daysContainer)[0];this._updateCalendarView(s);const i=this.optionsStore.viewDate.clone.startOf(a.month).startOf("weekDay",this.optionsStore.options.localization.startOfTheWeek).manipulate(12,a.hours);this._handleCalendarWeeks(s,i.clone);s.querySelectorAll(`[data-action="${T.selectDay}"]`).forEach((e=>{const s=[];s.push(Namespace.css.day);i.isBefore(this.optionsStore.viewDate,a.month)&&s.push(Namespace.css.old);i.isAfter(this.optionsStore.viewDate,a.month)&&s.push(Namespace.css.new);this.optionsStore.unset||this.optionsStore.options.dateRange||!this.dates.isPicked(i,a.date)||s.push(Namespace.css.active);this.validation.isValid(i,a.date)||s.push(Namespace.css.disabled);i.isSame(new DateTime,a.date)&&s.push(Namespace.css.today);i.weekDay!==0&&i.weekDay!==6||s.push(Namespace.css.weekend);this._handleDateRange(i,s);t(a.date,i,s,e);e.classList.remove(...e.classList);e.classList.add(...s);e.setAttribute("data-value",i.dateToDataValue());e.setAttribute("data-day",`${i.date}`);e.innerText=i.parts(void 0,{day:"numeric"}).day;e.ariaLabel=i.format("MMMM dd, yyyy");i.manipulate(1,a.date)}))}_handleDateRange(e,t){const s=this.dates.picked[0];const i=this.dates.picked[1];if(this.optionsStore.options.dateRange){e.isBetween(s,i,a.date)&&t.push(Namespace.css.rangeIn);e.isSame(s,a.date)&&t.push(Namespace.css.rangeStart);e.isSame(i,a.date)&&t.push(Namespace.css.rangeEnd)}}handleMouseEvents(e){const t=t=>{const s=t?.currentTarget;if(this.dates.picked.length!==1||s.classList.contains(Namespace.css.disabled))return;const i=[...e.querySelectorAll(".day")];const o=s.getAttribute("data-value");const n=DateTime.fromString(o,{format:"yyyy-MM-dd"});const r=i.findIndex((e=>e.getAttribute("data-value")===o));const c=this.dates.picked[0];const l=this.dates.picked[1];const d=c.dateToDataValue();const h=i.findIndex((e=>e.getAttribute("data-value")===d));const p=i[h];n.isSame(c,a.date)||s.classList.remove(Namespace.css.rangeStart);n.isSame(l,a.date)||s.classList.remove(Namespace.css.rangeEnd);let u;if(n.isBefore(c)){s.classList.add(Namespace.css.rangeStart);p?.classList.remove(Namespace.css.rangeStart);p?.classList.add(Namespace.css.rangeEnd);u=(e,t)=>t>r&&t<h}else{s.classList.add(Namespace.css.rangeEnd);p?.classList.remove(Namespace.css.rangeEnd);p?.classList.add(Namespace.css.rangeStart);u=(e,t)=>t<r&&t>h}i.filter(u).forEach((e=>{e.classList.add(Namespace.css.rangeIn)}))};const s=t=>{const s=[...e.querySelectorAll(".day")];this.dates.picked.length===1&&s.forEach((e=>e.classList.remove(Namespace.css.rangeIn)));if(this.dates.picked.length!==1)return;const i=t?.currentTarget;const o=new DateTime(i.getAttribute("data-value"));o.isSame(this.dates.picked[0],a.date)||i.classList.remove(Namespace.css.rangeStart);o.isSame(this.dates.picked[1],a.date)||i.classList.remove(Namespace.css.rangeEnd)};return{rangeHoverEvent:t,rangeHoverOutEvent:s}}_updateCalendarView(e){if(this.optionsStore.currentView!=="calendar")return;const[t,s,i]=e.parentElement.getElementsByClassName(Namespace.css.calendarHeader)[0].getElementsByTagName("div");s.setAttribute(Namespace.css.daysContainer,this.optionsStore.viewDate.format(this.optionsStore.options.localization.dayViewHeaderFormat));this.optionsStore.options.display.components.month?s.classList.remove(Namespace.css.disabled):s.classList.add(Namespace.css.disabled);this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1,a.month),a.month)?t.classList.remove(Namespace.css.disabled):t.classList.add(Namespace.css.disabled);this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1,a.month),a.month)?i.classList.remove(Namespace.css.disabled):i.classList.add(Namespace.css.disabled)}_daysOfTheWeek(){const e=this.optionsStore.viewDate.clone.startOf("weekDay",this.optionsStore.options.localization.startOfTheWeek).startOf(a.date);const t=[];document.createElement("div");if(this.optionsStore.options.display.calendarWeeks){const e=document.createElement("div");e.classList.add(Namespace.css.calendarWeeks,Namespace.css.noHighlight);e.innerText="#";t.push(e)}for(let s=0;s<7;s++){const s=document.createElement("div");s.classList.add(Namespace.css.dayOfTheWeek,Namespace.css.noHighlight);let i=e.format({weekday:"short"});this.optionsStore.options.localization.maxWeekdayLength>0&&(i=i.substring(0,this.optionsStore.options.localization.maxWeekdayLength));s.innerText=i;s.ariaLabel=e.format({weekday:"long"});e.manipulate(1,a.date);t.push(s)}return t}_handleCalendarWeeks(e,t){[...e.querySelectorAll(`.${Namespace.css.calendarWeeks}`)].filter((e=>e.innerText!=="#")).forEach((e=>{e.innerText=`${t.week}`;t.manipulate(7,a.date)}))}}class MonthDisplay{constructor(){this.optionsStore=l.locate(OptionsStore);this.dates=l.locate(Dates);this.validation=l.locate(Validation)}getPicker(){const e=document.createElement("div");e.classList.add(Namespace.css.monthsContainer);for(let t=0;t<12;t++){const t=document.createElement("div");t.tabIndex=-1;t.setAttribute("data-action",T.selectMonth);e.appendChild(t)}return e}_update(e,t){const s=e.getElementsByClassName(Namespace.css.monthsContainer)[0];if(this.optionsStore.currentView==="months"){const[e,t,i]=s.parentElement.getElementsByClassName(Namespace.css.calendarHeader)[0].getElementsByTagName("div");t.setAttribute(Namespace.css.monthsContainer,this.optionsStore.viewDate.format({year:"numeric"}));this.optionsStore.options.display.components.year?t.classList.remove(Namespace.css.disabled):t.classList.add(Namespace.css.disabled);this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1,a.year),a.year)?e.classList.remove(Namespace.css.disabled):e.classList.add(Namespace.css.disabled);this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1,a.year),a.year)?i.classList.remove(Namespace.css.disabled):i.classList.add(Namespace.css.disabled)}const i=this.optionsStore.viewDate.clone.startOf(a.year);s.querySelectorAll(`[data-action="${T.selectMonth}"]`).forEach(((e,s)=>{const o=[];o.push(Namespace.css.month);!this.optionsStore.unset&&this.dates.isPicked(i,a.month)&&o.push(Namespace.css.active);this.validation.isValid(i,a.month)||o.push(Namespace.css.disabled);t(a.month,i,o,e);e.classList.remove(...e.classList);e.classList.add(...o);e.setAttribute("data-value",`${s}`);e.innerText=`${i.format({month:"short"})}`;i.manipulate(1,a.month)}))}}class YearDisplay{constructor(){this.optionsStore=l.locate(OptionsStore);this.dates=l.locate(Dates);this.validation=l.locate(Validation)}getPicker(){const e=document.createElement("div");e.classList.add(Namespace.css.yearsContainer);for(let t=0;t<12;t++){const t=document.createElement("div");t.tabIndex=-1;t.setAttribute("data-action",T.selectYear);e.appendChild(t)}return e}_update(e,t){this._startYear=this.optionsStore.viewDate.clone.manipulate(-1,a.year);this._endYear=this.optionsStore.viewDate.clone.manipulate(10,a.year);const s=e.getElementsByClassName(Namespace.css.yearsContainer)[0];if(this.optionsStore.currentView==="years"){const[e,t,i]=s.parentElement.getElementsByClassName(Namespace.css.calendarHeader)[0].getElementsByTagName("div");t.setAttribute(Namespace.css.yearsContainer,`${this._startYear.format({year:"numeric"})}-${this._endYear.format({year:"numeric"})}`);this.optionsStore.options.display.components.decades?t.classList.remove(Namespace.css.disabled):t.classList.add(Namespace.css.disabled);this.validation.isValid(this._startYear,a.year)?e.classList.remove(Namespace.css.disabled):e.classList.add(Namespace.css.disabled);this.validation.isValid(this._endYear,a.year)?i.classList.remove(Namespace.css.disabled):i.classList.add(Namespace.css.disabled)}const i=this.optionsStore.viewDate.clone.startOf(a.year).manipulate(-1,a.year);s.querySelectorAll(`[data-action="${T.selectYear}"]`).forEach((e=>{const s=[];s.push(Namespace.css.year);!this.optionsStore.unset&&this.dates.isPicked(i,a.year)&&s.push(Namespace.css.active);this.validation.isValid(i,a.year)||s.push(Namespace.css.disabled);t(a.year,i,s,e);e.classList.remove(...e.classList);e.classList.add(...s);e.setAttribute("data-value",`${i.year}`);e.innerText=i.format({year:"numeric"});i.manipulate(1,a.year)}))}}class DecadeDisplay{constructor(){this.optionsStore=l.locate(OptionsStore);this.dates=l.locate(Dates);this.validation=l.locate(Validation)}getPicker(){const e=document.createElement("div");e.classList.add(Namespace.css.decadesContainer);for(let t=0;t<12;t++){const t=document.createElement("div");t.tabIndex=-1;t.setAttribute("data-action",T.selectDecade);e.appendChild(t)}return e}_update(e,t){const[s,i]=Dates.getStartEndYear(100,this.optionsStore.viewDate.year);this._startDecade=this.optionsStore.viewDate.clone.startOf(a.year);this._startDecade.year=s;this._endDecade=this.optionsStore.viewDate.clone.startOf(a.year);this._endDecade.year=i;const o=e.getElementsByClassName(Namespace.css.decadesContainer)[0];const[n,r,c]=o.parentElement.getElementsByClassName(Namespace.css.calendarHeader)[0].getElementsByTagName("div");const l=this.validation.isValid(this._startDecade,a.year);if(this.optionsStore.currentView==="decades"){r.setAttribute(Namespace.css.decadesContainer,`${this._startDecade.format({year:"numeric"})}-${this._endDecade.format({year:"numeric"})}`);l?n.classList.remove(Namespace.css.disabled):n.classList.add(Namespace.css.disabled);this.validation.isValid(this._endDecade,a.year)?c.classList.remove(Namespace.css.disabled):c.classList.add(Namespace.css.disabled)}const d=this.dates.picked.map((e=>e.year));o.querySelectorAll(`[data-action="${T.selectDecade}"]`).forEach(((e,s)=>{if(s===0){e.classList.add(Namespace.css.old);if(this._startDecade.year-10<0){e.textContent=" ";n.classList.add(Namespace.css.disabled);e.classList.add(Namespace.css.disabled);e.setAttribute("data-value","")}return}const i=[];i.push(Namespace.css.decade);const o=this._startDecade.year;const r=this._startDecade.year+9;!this.optionsStore.unset&&d.filter((e=>e>=o&&e<=r)).length>0&&i.push(Namespace.css.active);l||this.validation.isValid(this._startDecade.clone.manipulate(10,a.year),a.year)||i.push(Namespace.css.disabled);t("decade",this._startDecade,i,e);e.classList.remove(...e.classList);e.classList.add(...i);e.setAttribute("data-value",`${this._startDecade.year}`);e.innerText=`${this._startDecade.format({year:"numeric"})}`;this._startDecade.manipulate(10,a.year)}))}}class TimeDisplay{constructor(){this._gridColumns="";this.optionsStore=l.locate(OptionsStore);this.dates=l.locate(Dates);this.validation=l.locate(Validation)}getPicker(e){const t=document.createElement("div");t.classList.add(Namespace.css.clockContainer);t.append(...this._grid(e));return t}_update(e){const t=e.getElementsByClassName(Namespace.css.clockContainer)[0];let s=this.dates.lastPicked?.clone;!s&&this.optionsStore.options.useCurrent&&(s=this.optionsStore.viewDate.clone);t.querySelectorAll(".disabled").forEach((e=>e.classList.remove(Namespace.css.disabled)));if(this.optionsStore.options.display.components.hours){this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1,a.hours),a.hours)||t.querySelector(`[data-action=${T.incrementHours}]`).classList.add(Namespace.css.disabled);this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1,a.hours),a.hours)||t.querySelector(`[data-action=${T.decrementHours}]`).classList.add(Namespace.css.disabled);t.querySelector(`[data-time-component=${a.hours}]`).innerText=s?s.getHoursFormatted(this.optionsStore.options.localization.hourCycle):"--"}if(this.optionsStore.options.display.components.minutes){this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1,a.minutes),a.minutes)||t.querySelector(`[data-action=${T.incrementMinutes}]`).classList.add(Namespace.css.disabled);this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1,a.minutes),a.minutes)||t.querySelector(`[data-action=${T.decrementMinutes}]`).classList.add(Namespace.css.disabled);t.querySelector(`[data-time-component=${a.minutes}]`).innerText=s?s.minutesFormatted:"--"}if(this.optionsStore.options.display.components.seconds){this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1,a.seconds),a.seconds)||t.querySelector(`[data-action=${T.incrementSeconds}]`).classList.add(Namespace.css.disabled);this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1,a.seconds),a.seconds)||t.querySelector(`[data-action=${T.decrementSeconds}]`).classList.add(Namespace.css.disabled);t.querySelector(`[data-time-component=${a.seconds}]`).innerText=s?s.secondsFormatted:"--"}if(this.optionsStore.isTwelveHour){const e=t.querySelector(`[data-action=${T.toggleMeridiem}]`);const i=(s||this.optionsStore.viewDate).clone;e.innerText=i.meridiem();this.validation.isValid(i.manipulate(i.hours>=12?-12:12,a.hours))?e.classList.remove(Namespace.css.disabled):e.classList.add(Namespace.css.disabled)}t.style.gridTemplateAreas=`"${this._gridColumns}"`}_grid(e){this._gridColumns="";const t=[],s=[],i=[],o=document.createElement("div"),n=e(this.optionsStore.options.display.icons.up),r=e(this.optionsStore.options.display.icons.down);o.classList.add(Namespace.css.separator,Namespace.css.noHighlight);const c=o.cloneNode(true);c.innerHTML=":";const l=(e=false)=>e?c.cloneNode(true):o.cloneNode(true);if(this.optionsStore.options.display.components.hours){let e=document.createElement("div");e.tabIndex=-1;e.setAttribute("title",this.optionsStore.options.localization.incrementHour);e.setAttribute("data-action",T.incrementHours);e.appendChild(n.cloneNode(true));t.push(e);e=document.createElement("div");e.tabIndex=-1;e.setAttribute("title",this.optionsStore.options.localization.pickHour);e.setAttribute("data-action",T.showHours);e.setAttribute("data-time-component",a.hours);s.push(e);e=document.createElement("div");e.tabIndex=-1;e.setAttribute("title",this.optionsStore.options.localization.decrementHour);e.setAttribute("data-action",T.decrementHours);e.appendChild(r.cloneNode(true));i.push(e);this._gridColumns+="a"}if(this.optionsStore.options.display.components.minutes){this._gridColumns+=" a";if(this.optionsStore.options.display.components.hours){t.push(l());s.push(l(true));i.push(l());this._gridColumns+=" a"}let e=document.createElement("div");e.tabIndex=-1;e.setAttribute("title",this.optionsStore.options.localization.incrementMinute);e.setAttribute("data-action",T.incrementMinutes);e.appendChild(n.cloneNode(true));t.push(e);e=document.createElement("div");e.tabIndex=-1;e.setAttribute("title",this.optionsStore.options.localization.pickMinute);e.setAttribute("data-action",T.showMinutes);e.setAttribute("data-time-component",a.minutes);s.push(e);e=document.createElement("div");e.tabIndex=-1;e.setAttribute("title",this.optionsStore.options.localization.decrementMinute);e.setAttribute("data-action",T.decrementMinutes);e.appendChild(r.cloneNode(true));i.push(e)}if(this.optionsStore.options.display.components.seconds){this._gridColumns+=" a";if(this.optionsStore.options.display.components.minutes){t.push(l());s.push(l(true));i.push(l());this._gridColumns+=" a"}let e=document.createElement("div");e.tabIndex=-1;e.setAttribute("title",this.optionsStore.options.localization.incrementSecond);e.setAttribute("data-action",T.incrementSeconds);e.appendChild(n.cloneNode(true));t.push(e);e=document.createElement("div");e.tabIndex=-1;e.setAttribute("title",this.optionsStore.options.localization.pickSecond);e.setAttribute("data-action",T.showSeconds);e.setAttribute("data-time-component",a.seconds);s.push(e);e=document.createElement("div");e.tabIndex=-1;e.setAttribute("title",this.optionsStore.options.localization.decrementSecond);e.setAttribute("data-action",T.decrementSeconds);e.appendChild(r.cloneNode(true));i.push(e)}if(this.optionsStore.isTwelveHour){this._gridColumns+=" a";let e=l();t.push(e);const a=document.createElement("button");a.tabIndex=-1;a.setAttribute("type","button");a.setAttribute("title",this.optionsStore.options.localization.toggleMeridiem);a.setAttribute("data-action",T.toggleMeridiem);a.setAttribute("tabindex","-1");Namespace.css.toggleMeridiem.includes(",")?a.classList.add(...Namespace.css.toggleMeridiem.split(",")):a.classList.add(Namespace.css.toggleMeridiem);e=document.createElement("div");e.classList.add(Namespace.css.noHighlight);e.appendChild(a);s.push(e);e=l();i.push(e)}this._gridColumns=this._gridColumns.trim();return[...t,...s,...i]}}class HourDisplay{constructor(){this.optionsStore=l.locate(OptionsStore);this.validation=l.locate(Validation);this.dates=l.locate(Dates)}getPicker(){const e=document.createElement("div");e.classList.add(Namespace.css.hourContainer);for(let t=0;t<(this.optionsStore.isTwelveHour?12:24);t++){const t=document.createElement("div");t.tabIndex=-1;t.setAttribute("data-action",T.selectHour);e.appendChild(t)}return e}_update(e,t){const s=e.getElementsByClassName(Namespace.css.hourContainer)[0];const i=this.optionsStore.viewDate.clone.startOf(a.date);s.querySelectorAll(`[data-action="${T.selectHour}"]`).forEach((e=>{const s=[];s.push(Namespace.css.hour);this.validation.isValid(i,a.hours)||s.push(Namespace.css.disabled);t(a.hours,i,s,e);e.classList.remove(...e.classList);e.classList.add(...s);e.setAttribute("data-value",`${i.hours}`);e.innerText=i.getHoursFormatted(this.optionsStore.options.localization.hourCycle);i.manipulate(1,a.hours)}))}}class MinuteDisplay{constructor(){this.optionsStore=l.locate(OptionsStore);this.validation=l.locate(Validation)}getPicker(){const e=document.createElement("div");e.classList.add(Namespace.css.minuteContainer);const t=this.optionsStore.options.stepping===1?5:this.optionsStore.options.stepping;for(let s=0;s<60/t;s++){const t=document.createElement("div");t.tabIndex=-1;t.setAttribute("data-action",T.selectMinute);e.appendChild(t)}return e}_update(e,t){const s=e.getElementsByClassName(Namespace.css.minuteContainer)[0];const i=this.optionsStore.viewDate.clone.startOf(a.hours);const o=this.optionsStore.options.stepping===1?5:this.optionsStore.options.stepping;s.querySelectorAll(`[data-action="${T.selectMinute}"]`).forEach((e=>{const s=[];s.push(Namespace.css.minute);this.validation.isValid(i,a.minutes)||s.push(Namespace.css.disabled);t(a.minutes,i,s,e);e.classList.remove(...e.classList);e.classList.add(...s);e.setAttribute("data-value",`${i.minutes}`);e.innerText=i.minutesFormatted;i.manipulate(o,a.minutes)}))}}class secondDisplay{constructor(){this.optionsStore=l.locate(OptionsStore);this.validation=l.locate(Validation)}getPicker(){const e=document.createElement("div");e.classList.add(Namespace.css.secondContainer);for(let t=0;t<12;t++){const t=document.createElement("div");t.setAttribute("data-action",T.selectSecond);t.tabIndex=-1;e.appendChild(t)}return e}_update(e,t){const s=e.getElementsByClassName(Namespace.css.secondContainer)[0];const i=this.optionsStore.viewDate.clone.startOf(a.minutes);s.querySelectorAll(`[data-action="${T.selectSecond}"]`).forEach((e=>{const s=[];s.push(Namespace.css.second);this.validation.isValid(i,a.seconds)||s.push(Namespace.css.disabled);t(a.seconds,i,s,e);e.classList.remove(...e.classList);e.classList.add(...s);e.setAttribute("data-value",`${i.seconds}`);e.innerText=i.secondsFormatted;i.manipulate(5,a.seconds)}))}}class Collapse{
/**
     * Flips the show/hide state of `target`
     * @param target html element to affect.
     */
static toggle(e){e.classList.contains(Namespace.css.show)?this.hide(e):this.show(e)}
/**
     * Skips any animation or timeouts and immediately set the element to show.
     * @param target
     */static showImmediately(e){e.classList.remove(Namespace.css.collapsing);e.classList.add(Namespace.css.collapse,Namespace.css.show);e.style.height=""}
/**
     * If `target` is not already showing, then show after the animation.
     * @param target
     */static show(e){if(e.classList.contains(Namespace.css.collapsing)||e.classList.contains(Namespace.css.show))return;const t=()=>{Collapse.showImmediately(e)};e.style.height="0";e.classList.remove(Namespace.css.collapse);e.classList.add(Namespace.css.collapsing);setTimeout(t,this.getTransitionDurationFromElement(e));e.style.height=`${e.scrollHeight}px`}
/**
     * Skips any animation or timeouts and immediately set the element to hide.
     * @param target
     */static hideImmediately(e){if(e){e.classList.remove(Namespace.css.collapsing,Namespace.css.show);e.classList.add(Namespace.css.collapse)}}
/**
     * If `target` is not already hidden, then hide after the animation.
     * @param target HTML Element
     */static hide(e){if(e.classList.contains(Namespace.css.collapsing)||!e.classList.contains(Namespace.css.show))return;const t=()=>{Collapse.hideImmediately(e)};e.style.height=`${e.getBoundingClientRect().height}px`;const s=e=>e.offsetHeight;s(e);e.classList.remove(Namespace.css.collapse,Namespace.css.show);e.classList.add(Namespace.css.collapsing);e.style.height="";setTimeout(t,this.getTransitionDurationFromElement(e))}}
/**
 * Gets the transition duration from the `element` by getting css properties
 * `transition-duration` and `transition-delay`
 * @param element HTML Element
 */Collapse.getTransitionDurationFromElement=e=>{if(!e)return 0;let{transitionDuration:t,transitionDelay:s}=window.getComputedStyle(e);const i=Number.parseFloat(t);const a=Number.parseFloat(s);if(!i&&!a)return 0;t=t.split(",")[0];s=s.split(",")[0];return(Number.parseFloat(t)+Number.parseFloat(s))*1e3};class Display{constructor(){this._isVisible=false;this._keyboardEventBound=this._keyboardEvent.bind(this);
/**
         * A document click event to hide the widget if click is outside
         * @private
         * @param e MouseEvent
         */this._documentClickEvent=e=>{this.optionsStore.options.debug||window.debug||!this._isVisible||e.composedPath().includes(this.widget)||e.composedPath()?.includes(this.optionsStore.element)||this.hide()};
/**
         * Click event for any action like selecting a date
         * @param e MouseEvent
         * @private
         */this._actionsClickEvent=e=>{this._eventEmitters.action.emit({e:e})};this.optionsStore=l.locate(OptionsStore);this.validation=l.locate(Validation);this.dates=l.locate(Dates);this.dateDisplay=l.locate(DateDisplay);this.monthDisplay=l.locate(MonthDisplay);this.yearDisplay=l.locate(YearDisplay);this.decadeDisplay=l.locate(DecadeDisplay);this.timeDisplay=l.locate(TimeDisplay);this.hourDisplay=l.locate(HourDisplay);this.minuteDisplay=l.locate(MinuteDisplay);this.secondDisplay=l.locate(secondDisplay);this._eventEmitters=l.locate(EventEmitters);this._widget=void 0;this._eventEmitters.updateDisplay.subscribe((e=>{this._update(e)}))}get widget(){return this._widget}get dateContainer(){return this.widget?.querySelector(`div.${Namespace.css.dateContainer}`)}get timeContainer(){return this.widget?.querySelector(`div.${Namespace.css.timeContainer}`)}get isVisible(){return this._isVisible}
/**
     * Updates the table for a particular unit. Used when an option as changed or
     * whenever the class list might need to be refreshed.
     * @param unit
     * @private
     */_update(e){if(this.widget)switch(e){case a.seconds:this.secondDisplay._update(this.widget,this.paint);break;case a.minutes:this.minuteDisplay._update(this.widget,this.paint);break;case a.hours:this.hourDisplay._update(this.widget,this.paint);break;case a.date:this.dateDisplay._update(this.widget,this.paint);break;case a.month:this.monthDisplay._update(this.widget,this.paint);break;case a.year:this.yearDisplay._update(this.widget,this.paint);break;case"decade":this.decadeDisplay._update(this.widget,this.paint);break;case"clock":if(!this._hasTime)break;this.timeDisplay._update(this.widget);this._update(a.hours);this._update(a.minutes);this._update(a.seconds);break;case"calendar":this._update(a.date);this._update(a.year);this._update(a.month);this.decadeDisplay._update(this.widget,this.paint);this._updateCalendarHeader();break;case"all":this._hasTime&&this._update("clock");this._hasDate&&this._update("calendar")}}
/**
     * Allows developers to add/remove classes from an element.
     * @param _unit
     * @param _date
     * @param _classes
     * @param _element
     */
/* eslint-disable @typescript-eslint/no-unused-vars */
paint(e,t,s,i){}show(){if(this.widget==void 0){this._showSetDefaultIfNeeded();this._buildWidget();this._updateTheme();this._showSetupViewMode();if(this.optionsStore.options.display.inline)this.optionsStore.element.appendChild(this.widget);else{const e=this.optionsStore.options?.container||document.body;const t=this.optionsStore.options?.display?.placement||"bottom";e.appendChild(this.widget);const s=this._handleFocus.bind(this);this.createPopup(this.optionsStore.element,this.widget,{modifiers:[{name:"eventListeners",enabled:true},{name:"focusDate",enabled:true,phase:"afterWrite",fn(){s()}}],placement:document.documentElement.dir==="rtl"?`${t}-end`:`${t}-start`}).then((()=>{this._handleFocus()}))}this.optionsStore.options.display.viewMode=="clock"&&this._eventEmitters.action.emit({e:null,action:T.showClock});this.widget.querySelectorAll("[data-action]").forEach((e=>e.addEventListener("click",this._actionsClickEvent)));if(this._hasTime&&this.optionsStore.options.display.sideBySide){this.timeDisplay._update(this.widget);this.widget.getElementsByClassName(Namespace.css.clockContainer)[0].style.display="grid"}}this.widget.classList.add(Namespace.css.show);if(!this.optionsStore.options.display.inline){this.updatePopup();document.addEventListener("click",this._documentClickEvent)}this._eventEmitters.triggerEvent.emit({type:Namespace.events.show});this._isVisible=true;this.optionsStore.options.display.keyboardNavigation&&this.widget.addEventListener("keydown",this._keyboardEventBound)}_showSetupViewMode(){const e=this._hasTime&&!this._hasDate;if(e){this.optionsStore.currentView="clock";this._eventEmitters.action.emit({e:null,action:T.showClock})}else this.optionsStore.currentCalendarViewMode||(this.optionsStore.currentCalendarViewMode=this.optionsStore.minimumCalendarViewMode);if(!e&&this.optionsStore.options.display.viewMode!=="clock"){this._hasTime&&(this.optionsStore.options.display.sideBySide?Collapse.show(this.timeContainer):Collapse.hideImmediately(this.timeContainer));Collapse.show(this.dateContainer)}this._hasDate&&this._showMode()}_showSetDefaultIfNeeded(){if(this.dates.picked.length==0){if(this.optionsStore.options.useCurrent&&!this.optionsStore.options.defaultDate){const e=(new DateTime).setLocalization(this.optionsStore.options.localization);if(!this.optionsStore.options.keepInvalid){let t=0;let s=1;this.optionsStore.options.restrictions.maxDate?.isBefore(e)&&(s=-1);while(!this.validation.isValid(e)&&t>31){e.manipulate(s,a.date);t++}}this.dates.setValue(e)}this.optionsStore.options.defaultDate&&this.dates.setValue(this.optionsStore.options.defaultDate)}}async createPopup(e,t,s){let i;if(window?.Popper)i=window?.Popper?.createPopper;else{const{createPopper:e}=await import("@popperjs/core");i=e}i&&(this._popperInstance=i(e,t,s))}updatePopup(){this._popperInstance&&this._popperInstance.update()}
/**
     * Changes the calendar view mode. E.g. month <-> year
     * @param direction -/+ number to move currentViewMode
     * @private
     */_showMode(e){if(!this.widget)return;if(e){const t=Math.max(this.optionsStore.minimumCalendarViewMode,Math.min(3,this.optionsStore.currentCalendarViewMode+e));if(this.optionsStore.currentCalendarViewMode==t)return;this.optionsStore.currentCalendarViewMode=t}this.widget.querySelectorAll(`.${Namespace.css.dateContainer} > div:not(.${Namespace.css.calendarHeader}), .${Namespace.css.timeContainer} > div:not(.${Namespace.css.clockContainer})`).forEach((e=>e.style.display="none"));const t=d[this.optionsStore.currentCalendarViewMode];const s=this.widget.querySelector(`.${t.className}`);switch(t.className){case Namespace.css.decadesContainer:this.decadeDisplay._update(this.widget,this.paint);break;case Namespace.css.yearsContainer:this.yearDisplay._update(this.widget,this.paint);break;case Namespace.css.monthsContainer:this.monthDisplay._update(this.widget,this.paint);break;case Namespace.css.daysContainer:this.dateDisplay._update(this.widget,this.paint);break}s.style.display="grid";this.optionsStore.options.display.sideBySide&&(this.widget.querySelectorAll(`.${Namespace.css.clockContainer}`)[0].style.display="grid");this._updateCalendarHeader();this._eventEmitters.viewUpdate.emit();this.findViewDateElement()?.focus()}
/**
     * Changes the theme. E.g. light, dark or auto
     * @param theme the theme name
     * @private
     */_updateTheme(e){if(this.widget){if(e){if(this.optionsStore.options.display.theme===e)return;this.optionsStore.options.display.theme=e}this.widget.classList.remove("light","dark");this.widget.classList.add(this._getThemeClass());this.optionsStore.options.display.theme==="auto"?window.matchMedia(Namespace.css.isDarkPreferredQuery).addEventListener("change",(()=>this._updateTheme())):window.matchMedia(Namespace.css.isDarkPreferredQuery).removeEventListener("change",(()=>this._updateTheme()))}}_getThemeClass(){const e=this.optionsStore.options.display.theme||"auto";const t=window.matchMedia&&window.matchMedia(Namespace.css.isDarkPreferredQuery).matches;switch(e){case"light":return Namespace.css.lightTheme;case"dark":return Namespace.css.darkTheme;case"auto":return t?Namespace.css.darkTheme:Namespace.css.lightTheme}}_updateCalendarHeader(){if(!this._hasDate)return;const e=[...this.widget.querySelector(`.${Namespace.css.dateContainer} div[style*="display: grid"]`).classList].find((e=>e.startsWith(Namespace.css.dateContainer)));const[t,s,i]=this.widget.getElementsByClassName(Namespace.css.calendarHeader)[0].getElementsByTagName("div");switch(e){case Namespace.css.decadesContainer:t.setAttribute("title",this.optionsStore.options.localization.previousCentury);s.setAttribute("title","");i.setAttribute("title",this.optionsStore.options.localization.nextCentury);break;case Namespace.css.yearsContainer:t.setAttribute("title",this.optionsStore.options.localization.previousDecade);s.setAttribute("title",this.optionsStore.options.localization.selectDecade);i.setAttribute("title",this.optionsStore.options.localization.nextDecade);break;case Namespace.css.monthsContainer:t.setAttribute("title",this.optionsStore.options.localization.previousYear);s.setAttribute("title",this.optionsStore.options.localization.selectYear);i.setAttribute("title",this.optionsStore.options.localization.nextYear);break;case Namespace.css.daysContainer:t.setAttribute("title",this.optionsStore.options.localization.previousMonth);s.setAttribute("title",this.optionsStore.options.localization.selectMonth);i.setAttribute("title",this.optionsStore.options.localization.nextMonth);s.setAttribute(e,this.optionsStore.viewDate.format(this.optionsStore.options.localization.dayViewHeaderFormat));break}s.innerText=s.getAttribute(e)}hide(){if(this.widget&&this._isVisible){this.widget.classList.remove(Namespace.css.show);if(this._isVisible){this._eventEmitters.triggerEvent.emit({type:Namespace.events.hide,date:this.optionsStore.unset?null:this.dates.lastPicked?.clone});this._isVisible=false}document.removeEventListener("click",this._documentClickEvent);this.optionsStore.options.display.keyboardNavigation&&this.widget.removeEventListener("keydown",this._keyboardEventBound);this.optionsStore.toggle?this.optionsStore.toggle.focus():this.optionsStore.input&&this.optionsStore.input.focus()}}toggle(){return this._isVisible?this.hide():this.show()}_dispose(){document.removeEventListener("click",this._documentClickEvent);this._popperInstance&&this._popperInstance.destroy();if(this.widget){this.widget.querySelectorAll("[data-action]").forEach((e=>e.removeEventListener("click",this._actionsClickEvent)));this.widget.parentNode.removeChild(this.widget);this._widget=void 0}}_buildWidget(){const e=document.createElement("div");e.tabIndex=-1;e.classList.add(Namespace.css.widget);e.setAttribute("role","widget");const t=document.createElement("div");t.tabIndex=-1;t.classList.add(Namespace.css.dateContainer);t.append(this.getHeadTemplate(),this.decadeDisplay.getPicker(),this.yearDisplay.getPicker(),this.monthDisplay.getPicker(),this.dateDisplay.getPicker());const s=document.createElement("div");s.tabIndex=-1;s.classList.add(Namespace.css.timeContainer);s.appendChild(this.timeDisplay.getPicker(this._iconTag.bind(this)));s.appendChild(this.hourDisplay.getPicker());s.appendChild(this.minuteDisplay.getPicker());s.appendChild(this.secondDisplay.getPicker());const i=document.createElement("div");i.tabIndex=-1;i.classList.add(Namespace.css.toolbar);i.append(...this.getToolbarElements());this.optionsStore.options.display.inline&&e.classList.add(Namespace.css.inline);this.optionsStore.options.display.calendarWeeks&&e.classList.add("calendarWeeks");if(this.optionsStore.options.display.sideBySide&&this._hasDateAndTime){this._buildWidgetSideBySide(e,t,s,i);return}this.optionsStore.options.display.toolbarPlacement==="top"&&e.appendChild(i);const a=(t,s,i,a)=>{if(t){if(s){i.classList.add(Namespace.css.collapse);a&&i.classList.add(Namespace.css.show)}e.appendChild(i)}};a(this._hasDate,this._hasTime,t,this.optionsStore.options.display.viewMode!=="clock");a(this._hasTime,this._hasDate,s,this.optionsStore.options.display.viewMode==="clock");this.optionsStore.options.display.toolbarPlacement==="bottom"&&e.appendChild(i);const o=document.createElement("div");o.classList.add("arrow");o.setAttribute("data-popper-arrow","");e.appendChild(o);this._widget=e}_buildWidgetSideBySide(e,t,s,i){e.classList.add(Namespace.css.sideBySide);this.optionsStore.options.display.toolbarPlacement==="top"&&e.appendChild(i);const a=document.createElement("div");a.classList.add("td-row");t.classList.add("td-half");s.classList.add("td-half");a.appendChild(t);a.appendChild(s);e.appendChild(a);this.optionsStore.options.display.toolbarPlacement==="bottom"&&e.appendChild(i);this._widget=e}get _hasTime(){return this.optionsStore.options.display.components.clock&&(this.optionsStore.options.display.components.hours||this.optionsStore.options.display.components.minutes||this.optionsStore.options.display.components.seconds)}get _hasDate(){return this.optionsStore.options.display.components.calendar&&(this.optionsStore.options.display.components.year||this.optionsStore.options.display.components.month||this.optionsStore.options.display.components.date)}get _hasDateAndTime(){return this._hasDate&&this._hasTime}getToolbarElements(){const e=[];if(this.optionsStore.options.display.buttons.today){const t=document.createElement("div");t.tabIndex=-1;t.setAttribute("data-action",T.today);t.setAttribute("title",this.optionsStore.options.localization.today);t.appendChild(this._iconTag(this.optionsStore.options.display.icons.today));e.push(t)}if(!this.optionsStore.options.display.sideBySide&&this._hasDate&&this._hasTime){let t,s;if(this.optionsStore.options.display.viewMode==="clock"){t=this.optionsStore.options.localization.selectDate;s=this.optionsStore.options.display.icons.date}else{t=this.optionsStore.options.localization.selectTime;s=this.optionsStore.options.display.icons.time}const i=document.createElement("div");i.tabIndex=-1;i.setAttribute("data-action",T.togglePicker);i.setAttribute("title",t);i.appendChild(this._iconTag(s));e.push(i)}if(this.optionsStore.options.display.buttons.clear){const t=document.createElement("div");t.tabIndex=-1;t.setAttribute("data-action",T.clear);t.setAttribute("title",this.optionsStore.options.localization.clear);t.appendChild(this._iconTag(this.optionsStore.options.display.icons.clear));e.push(t)}if(this.optionsStore.options.display.buttons.close){const t=document.createElement("div");t.tabIndex=-1;t.setAttribute("data-action",T.close);t.setAttribute("title",this.optionsStore.options.localization.close);t.appendChild(this._iconTag(this.optionsStore.options.display.icons.close));e.push(t)}return e}getHeadTemplate(){const e=document.createElement("div");e.classList.add(Namespace.css.calendarHeader);const t=document.createElement("div");t.classList.add(Namespace.css.previous);t.setAttribute("data-action",T.previous);t.appendChild(this._iconTag(this.optionsStore.options.display.icons.previous));t.tabIndex=-1;const s=document.createElement("div");s.classList.add(Namespace.css.switch);s.setAttribute("data-action",T.changeCalendarView);s.tabIndex=-1;const i=document.createElement("div");i.classList.add(Namespace.css.next);i.setAttribute("data-action",T.next);i.appendChild(this._iconTag(this.optionsStore.options.display.icons.next));i.tabIndex=-1;e.append(t,s,i);return e}
/**
     * Builds an icon tag as either an `<i>`
     * or with icons => type is `sprites` then a svg tag instead
     * @param iconClass
     * @private
     */_iconTag(e){if(this.optionsStore.options.display.icons.type==="sprites"){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");const s=document.createElementNS("http://www.w3.org/2000/svg","use");s.setAttribute("xlink:href",e);s.setAttribute("href",e);t.appendChild(s);return t}const t=document.createElement("i");t.classList.add(...e.split(" "));return t}_rebuild(){const e=this._isVisible;this._dispose();e&&this.show()}refreshCurrentView(){this._isVisible||this._dispose();switch(this.optionsStore.currentView){case"clock":this._update("clock");break;case"calendar":this._update(a.date);break;case"months":this._update(a.month);break;case"years":this._update(a.year);break;case"decades":this._update("decade");break}}_keyboardEvent(e){if(this.optionsStore.currentView!=="clock"){this._handleKeyDownDate(e);return false}this._handleKeyDownClock(e)}findViewDateElement(){let e="";let t="";switch(this.optionsStore.currentView){case"clock":break;case"calendar":e=Namespace.css.daysContainer;t=this.optionsStore.viewDate.dateToDataValue();break;case"months":e=Namespace.css.monthsContainer;t=this.optionsStore.viewDate.month.toString();break;case"years":e=Namespace.css.yearsContainer;t=this.optionsStore.viewDate.year.toString();break;case"decades":e=Namespace.css.decadesContainer;t=(Math.floor(this.optionsStore.viewDate.year/10)*10).toString();break}return this.widget.querySelector(`.${e} > div[data-value="${t}"]`)}_handleKeyDownDate(e){let t=false;const s=document.activeElement;let i=null;let o=7;let n=1;let r=1;const c=this.optionsStore.currentView;switch(c){case"calendar":i=a.date;break;case"months":i=a.month;o=3;n=1;break;case"years":i=a.year;o=3;n=1;break;case"decades":i=a.year;o=30;n=10;break}switch(e.key){case"Esc":case"Escape":this._eventEmitters.action.emit({e:null,action:T.close});break;case" ":case"Enter":s.click();e.stopPropagation();e.preventDefault();return;case"Tab":this._handleTab(s,e);return;case"Right":case"ArrowRight":r=n;t=true;break;case"Left":case"ArrowLeft":t=true;r=-n;break;case"Down":case"ArrowDown":t=true;r=o;break;case"Up":case"ArrowUp":t=true;r=-o;break;case"PageDown":switch(c){case"calendar":i=e.shiftKey?a.year:a.month;r=1;break;case"months":i=a.year;r=e.shiftKey?10:1;break;case"years":case"decades":i=a.year;r=e.shiftKey?100:10;break}t=true;break;case"PageUp":switch(c){case"calendar":i=e.shiftKey?a.year:a.month;r=-1;break;case"months":i=a.year;r=-(e.shiftKey?10:1);break;case"years":case"decades":i=a.year;r=-(e.shiftKey?100:10);break}t=true;break;case"Home":this.optionsStore.viewDate=this.optionsStore.viewDate.clone.startOf("weekDay",this.optionsStore.options.localization.startOfTheWeek);t=true;i=null;break;case"End":this.optionsStore.viewDate=this.optionsStore.viewDate.clone.endOf("weekDay",this.optionsStore.options.localization.startOfTheWeek);t=true;i=null;break}if(!t)return;let l=this.optionsStore.viewDate;i&&(l=l.clone.manipulate(r,i));this._eventEmitters.updateViewDate.emit(l);const d=this.findViewDateElement();d&&d.focus();e.stopPropagation();e.preventDefault()}_handleKeyDownClock(e){let t=false;const s=document.activeElement;const i=this.widget.querySelector(`.${Namespace.css.timeContainer} > div[style*="display: grid"]`);let a=Namespace.css.clockContainer;i.classList.contains(Namespace.css.hourContainer)&&(a=Namespace.css.hourContainer);i.classList.contains(Namespace.css.minuteContainer)&&(a=Namespace.css.minuteContainer);i.classList.contains(Namespace.css.secondContainer)&&(a=Namespace.css.secondContainer);switch(e.key){case"Esc":case"Escape":this._eventEmitters.action.emit({e:null,action:T.close});break;case" ":case"Enter":s.click();e.stopPropagation();e.preventDefault();return;case"Tab":this._handleTab(s,e);return}if(a===Namespace.css.clockContainer)return;const o=[...i.querySelectorAll("div")];const n=o.indexOf(document.activeElement);const r=4;let c;switch(e.key){case"Right":case"ArrowRight":c=n<o.length-1?n+1:null;t=true;break;case"Left":case"ArrowLeft":t=true;c=n>0?n-1:null;break;case"Down":case"ArrowDown":c=n+r<o.length?n+r:null;t=true;break;case"Up":case"ArrowUp":c=n-r>=0?n-r:null;t=true;break}if(t){c!==void 0&&c!==null&&o[c].focus();e.stopPropagation();e.preventDefault()}}_handleTab(e,t){const s=t.shiftKey;const i=()=>{const e=this.widget.querySelectorAll(`.${Namespace.css.calendarHeader} > div`);a.push(...e)};const a=[];console.log(this.optionsStore.currentView);switch(this.optionsStore.currentView){case"clock":{a.push(...this.widget.querySelectorAll(`.${Namespace.css.timeContainer} > div[style*="display: grid"] > div[data-action]`));const e=this.widget.querySelectorAll(`.${Namespace.css.clockContainer}`)[0];e?.style.display==="grid"&&a.push(...this.widget.querySelectorAll(`.${Namespace.css.toggleMeridiem}`))}break;case"calendar":case"months":case"years":case"decades":i();a.push(this.findViewDateElement());break}const o=this.widget.querySelectorAll(`.${Namespace.css.toolbar} > div`);a.push(...o);const n=a.indexOf(e);if(n!==-1){s?n===0?a[a.length-1].focus():a[n-1].focus():n===a.length-1?a[0].focus():a[n+1].focus();t.stopPropagation();t.preventDefault()}}_handleFocus(){this.optionsStore.currentView==="clock"?this._handleFocusClock():this.findViewDateElement().focus()}_handleFocusClock(){this.widget.querySelector(`.${Namespace.css.timeContainer} > div[style*="display: grid"]`).children[0].focus()}}class Actions{constructor(){this.optionsStore=l.locate(OptionsStore);this.dates=l.locate(Dates);this.validation=l.locate(Validation);this.display=l.locate(Display);this._eventEmitters=l.locate(EventEmitters);this._eventEmitters.action.subscribe((e=>{this.do(e.e,e.action)}))}
/**
     * Performs the selected `action`. See ActionTypes
     * @param e This is normally a click event
     * @param action If not provided, then look for a [data-action]
     */
do(e,t){const s=e?.currentTarget;if(s?.classList?.contains(Namespace.css.disabled))return;t=t||s?.dataset?.action;const i=(this.dates.lastPicked||this.optionsStore.viewDate).clone;switch(t){case T.next:case T.previous:this.handleNextPrevious(t);break;case T.changeCalendarView:this.display._showMode(1);this.display._updateCalendarHeader();break;case T.selectMonth:case T.selectYear:case T.selectDecade:this.handleSelectCalendarMode(t,s);break;case T.selectDay:this.handleSelectDay(s);break;case T.selectHour:{let t=+s.dataset.value;i.hours>=12&&this.optionsStore.isTwelveHour&&(t+=12);i.hours=t;this.dates.setValue(i,this.dates.lastPickedIndex);this.hideOrClock(e);break}case T.selectMinute:i.minutes=+s.dataset.value;this.dates.setValue(i,this.dates.lastPickedIndex);this.hideOrClock(e);break;case T.selectSecond:i.seconds=+s.dataset.value;this.dates.setValue(i,this.dates.lastPickedIndex);this.hideOrClock(e);break;case T.incrementHours:this.manipulateAndSet(i,a.hours);break;case T.incrementMinutes:this.manipulateAndSet(i,a.minutes,this.optionsStore.options.stepping);break;case T.incrementSeconds:this.manipulateAndSet(i,a.seconds);break;case T.decrementHours:this.manipulateAndSet(i,a.hours,-1);break;case T.decrementMinutes:this.manipulateAndSet(i,a.minutes,this.optionsStore.options.stepping*-1);break;case T.decrementSeconds:this.manipulateAndSet(i,a.seconds,-1);break;case T.toggleMeridiem:this.manipulateAndSet(i,a.hours,this.dates.lastPicked.hours>=12?-12:12);break;case T.togglePicker:this.handleToggle(s);break;case T.showClock:case T.showHours:case T.showMinutes:case T.showSeconds:if(!this.optionsStore.options.display.sideBySide&&this.optionsStore.currentView!=="clock"){Collapse.hideImmediately(this.display.dateContainer);Collapse.showImmediately(this.display.timeContainer)}this.handleShowClockContainers(t);break;case T.clear:this.dates.setValue(null);this.display._updateCalendarHeader();break;case T.close:this.display.hide();break;case T.today:{const e=(new DateTime).setLocalization(this.optionsStore.options.localization);this._eventEmitters.updateViewDate.emit(e);if(!this.validation.isValid(e,a.date))break;this.optionsStore.options.dateRange?this.handleDateRange(e):this.optionsStore.options.multipleDates?this.handleMultiDate(e):this.dates.setValue(e,this.dates.lastPickedIndex);break}}}handleShowClockContainers(e){if(!this.display._hasTime){Namespace.errorMessages.throwError("Cannot show clock containers when time is disabled.");return}this.optionsStore.currentView="clock";this.display.widget.querySelectorAll(`.${Namespace.css.timeContainer} > div`).forEach((e=>e.style.display="none"));let t="";switch(e){case T.showClock:t=Namespace.css.clockContainer;this.display._update("clock");break;case T.showHours:t=Namespace.css.hourContainer;this.display._update(a.hours);break;case T.showMinutes:t=Namespace.css.minuteContainer;this.display._update(a.minutes);break;case T.showSeconds:t=Namespace.css.secondContainer;this.display._update(a.seconds);break}const s=this.display.widget.getElementsByClassName(t)[0];s.style.display="grid";s.children[0]?.focus()}handleNextPrevious(e){const{unit:t,step:s}=d[this.optionsStore.currentCalendarViewMode];e===T.next?this.optionsStore.viewDate.manipulate(s,t):this.optionsStore.viewDate.manipulate(s*-1,t);this._eventEmitters.viewUpdate.emit();this.display._showMode()}
/**
     * After setting the value it will either show the clock or hide the widget.
     * @param e
     */hideOrClock(e){this.optionsStore.isTwelveHour||this.optionsStore.options.display.components.minutes||this.optionsStore.options.display.keepOpen||this.optionsStore.options.display.inline?this.do(e,T.showClock):this.display.hide()}
/**
     * Common function to manipulate {@link lastPicked} by `unit`.
     * @param lastPicked
     * @param unit
     * @param value Value to change by
     */manipulateAndSet(e,t,s=1){const i=e.manipulate(s,t);this.validation.isValid(i,t)&&this.dates.setValue(i,this.dates.lastPickedIndex)}handleSelectCalendarMode(e,t){const s=+t.dataset.value;switch(e){case T.selectMonth:this.optionsStore.viewDate.month=s;break;case T.selectYear:case T.selectDecade:this.optionsStore.viewDate.year=s;break}if(this.optionsStore.currentCalendarViewMode===this.optionsStore.minimumCalendarViewMode){this.dates.setValue(this.optionsStore.viewDate,this.dates.lastPickedIndex);this.optionsStore.options.display.inline||this.display.hide()}else this.display._showMode(-1)}handleToggle(e){if(e.getAttribute("title")===this.optionsStore.options.localization.selectDate){e.setAttribute("title",this.optionsStore.options.localization.selectTime);e.innerHTML=this.display._iconTag(this.optionsStore.options.display.icons.time).outerHTML;this.display._updateCalendarHeader();this.optionsStore.refreshCurrentView()}else{e.setAttribute("title",this.optionsStore.options.localization.selectDate);e.innerHTML=this.display._iconTag(this.optionsStore.options.display.icons.date).outerHTML;if(this.display._hasTime){this.handleShowClockContainers(T.showClock);this.display._update("clock")}}this.display.widget.querySelectorAll(`.${Namespace.css.dateContainer}, .${Namespace.css.timeContainer}`).forEach((e=>Collapse.toggle(e)));this._eventEmitters.viewUpdate.emit();const t=this.display.widget.querySelector(`.${Namespace.css.collapsing} > div[style*="display: grid"]`);t?.focus()}handleSelectDay(e){const t=this.optionsStore.viewDate.clone;e.classList.contains(Namespace.css.old)&&t.manipulate(-1,a.month);e.classList.contains(Namespace.css.new)&&t.manipulate(1,a.month);t.date=+e.dataset.day;this.optionsStore.options.dateRange?this.handleDateRange(t):this.optionsStore.options.multipleDates?this.handleMultiDate(t):this.dates.setValue(t,this.dates.lastPickedIndex);this.display._hasTime||this.optionsStore.options.display.keepOpen||this.optionsStore.options.display.inline||this.optionsStore.options.multipleDates||this.optionsStore.options.dateRange||this.display.hide()}handleMultiDate(e){let t=this.dates.pickedIndex(e,a.date);if(t!==-1)this.dates.setValue(null,t);else{t=this.dates.lastPickedIndex+1;this.dates.picked.length===0&&(t=0);this.dates.setValue(e,t)}}handleDateRange(e){switch(this.dates.picked.length){case 2:this.dates.clear();break;case 1:{const t=this.dates.picked[0];if(e.getTime()===t.getTime()){this.dates.clear();break}if(e.isBefore(t)){this.dates.setValue(e,0);this.dates.setValue(t,1);return}this.dates.setValue(e,1);return}}this.dates.setValue(e,0)}}class TempusDominus{constructor(e,t={}){this._subscribers={};this._isDisabled=false;this._inputChangeEvent=e=>{const t=e?.detail;if(t)return;const s=()=>{this.dates.lastPicked&&(this.optionsStore.viewDate=this.dates.lastPicked.clone)};const i=this.optionsStore.input.value;if(this.optionsStore.options.multipleDates||this.optionsStore.options.dateRange)try{const e=i.split(this.optionsStore.options.multipleDatesSeparator);for(let t=0;t<e.length;t++)this.dates.setFromInput(e[t],t);s()}catch{console.warn("TD: Something went wrong trying to set the multipleDates values from the input field.")}else{this.dates.setFromInput(i,0);s()}};this._toggleClickEvent=()=>{this.optionsStore.element?.disabled||this.optionsStore.input?.disabled||this.optionsStore.toggle.nodeName==="INPUT"&&this.optionsStore.toggle?.type==="text"&&this.optionsStore.options.allowInputToggle||this.toggle()};this._openClickEvent=()=>{this.optionsStore.element?.disabled||this.optionsStore.input?.disabled||this.display.isVisible||this.show()};c();this._eventEmitters=l.locate(EventEmitters);this.optionsStore=l.locate(OptionsStore);this.display=l.locate(Display);this.dates=l.locate(Dates);this.actions=l.locate(Actions);e||Namespace.errorMessages.mustProvideElement();this.optionsStore.element=e;this._initializeOptions(t,p,true);this.optionsStore.viewDate.setLocalization(this.optionsStore.options.localization);this.optionsStore.unset=true;this._initializeInput();this._initializeToggle();this.optionsStore.options.display.inline&&this.display.show();this._eventEmitters.triggerEvent.subscribe((e=>{this._triggerEvent(e)}));this._eventEmitters.viewUpdate.subscribe((()=>{this._viewUpdate()}));this._eventEmitters.updateViewDate.subscribe((e=>{this.viewDate=e}))}get viewDate(){return this.optionsStore.viewDate}set viewDate(e){this.optionsStore.viewDate=e;this.optionsStore.viewDate.setLocalization(this.optionsStore.options.localization);this.display._update(this.optionsStore.currentView==="clock"?"clock":"calendar")}
/**
     * Update the picker options. If `reset` is provide `options` will be merged with DefaultOptions instead.
     * @param options
     * @param reset
     * @public
     */
updateOptions(e,t=false){t?this._initializeOptions(e,p):this._initializeOptions(e,this.optionsStore.options);this.optionsStore.viewDate.setLocalization(this.optionsStore.options.localization);this.display.refreshCurrentView()}toggle(){this._isDisabled||this.display.toggle()}show(){this._isDisabled||this.display.show()}hide(){this.display.hide()}disable(){this._isDisabled=true;this.optionsStore.input?.setAttribute("disabled","disabled");this.display.hide()}enable(){this._isDisabled=false;this.optionsStore.input?.removeAttribute("disabled")}clear(){this.optionsStore.input.value="";this.dates.clear()}
/**
     * Allows for a direct subscription to picker events, without having to use addEventListener on the element.
     * @param eventTypes See Namespace.Events
     * @param callbacks Function to call when event is triggered
     * @public
     */
subscribe(e,t){typeof e==="string"&&(e=[e]);let s;s=Array.isArray(t)?t:[t];e.length!==s.length&&Namespace.errorMessages.subscribeMismatch();const i=[];for(let t=0;t<e.length;t++){const a=e[t];Array.isArray(this._subscribers[a])||(this._subscribers[a]=[]);this._subscribers[a].push(s[t]);i.push({unsubscribe:this._unsubscribe.bind(this,a,this._subscribers[a].length-1)});if(e.length===1)return i[0]}return i}dispose(){this.display.hide();this.display._dispose();this._eventEmitters.destroy();this.optionsStore.input?.removeEventListener("change",this._inputChangeEvent);if(this.optionsStore.options.allowInputToggle){this.optionsStore.input?.removeEventListener("click",this._openClickEvent);this.optionsStore.input?.removeEventListener("focus",this._openClickEvent)}this.optionsStore.toggle?.removeEventListener("click",this._toggleClickEvent);this.optionsStore.toggle?.removeEventListener("keydown",this._handleToggleKeydown);this._subscribers={}}
/**
     * Updates the options to use the provided language.
     * THe language file must be loaded first.
     * @param language
     */locale(e){const t=M[e];t&&this.updateOptions({localization:t})}
/**
     * Triggers an event like ChangeEvent when the picker has updated the value
     * of a selected date.
     * @param event Accepts a BaseEvent object.
     * @private
     */_triggerEvent(e){e.viewMode=this.optionsStore.currentView;const t=e.type===Namespace.events.change;if(t){const{date:t,oldDate:s,isClear:i}=e;if(t&&s&&t.isSame(s)||!i&&!t&&!s)return;this._handleAfterChangeEvent(e);this.optionsStore.input?.dispatchEvent(new CustomEvent("change",{detail:e}));if(this.optionsStore.toggle){let e=this.optionsStore.options.localization.toggleAriaLabel;if(this.dates.picked.length>0){const t=this.dates.picked.map((e=>e.format())).join(", ");e=`${e}, ${t}`}this.optionsStore.toggle.ariaLabel=e}}this.optionsStore.element.dispatchEvent(new CustomEvent(e.type,{detail:e}));if(window.jQuery){const s=window.jQuery;t&&this.optionsStore.input?s(this.optionsStore.input).trigger(e):s(this.optionsStore.element).trigger(e)}this._publish(e)}_publish(e){Array.isArray(this._subscribers[e.type])&&this._subscribers[e.type].forEach((t=>{t(e)}))}_viewUpdate(){this._triggerEvent({type:Namespace.events.update,viewDate:this.optionsStore.viewDate.clone})}_unsubscribe(e,t){this._subscribers[e].splice(t,1)}
/**
     * Merges two Option objects together and validates options type
     * @param config new Options
     * @param mergeTo Options to merge into
     * @param includeDataset When true, the elements data-td attributes will be included in the
     * @private
     */_initializeOptions(e,t,s=false){let i=OptionConverter.deepCopy(e);i=OptionConverter._mergeOptions(i,t);s&&(i=OptionConverter._dataToOptions(this.optionsStore.element,i));OptionConverter._validateConflicts(i);i.viewDate=i.viewDate.setLocalization(i.localization);this.optionsStore.viewDate.isSame(i.viewDate)||(this.optionsStore.viewDate=i.viewDate);i.display.components.year&&(this.optionsStore.minimumCalendarViewMode=2);i.display.components.month&&(this.optionsStore.minimumCalendarViewMode=1);i.display.components.date&&(this.optionsStore.minimumCalendarViewMode=0);this.optionsStore.currentCalendarViewMode=Math.max(this.optionsStore.minimumCalendarViewMode,this.optionsStore.currentCalendarViewMode);d[this.optionsStore.currentCalendarViewMode].name!==i.display.viewMode&&(this.optionsStore.currentCalendarViewMode=Math.max(d.findIndex((e=>e.name===i.display.viewMode)),this.optionsStore.minimumCalendarViewMode));this.display?.isVisible&&this.display._update("all");i.display.components.useTwentyfourHour&&i.localization.hourCycle===void 0?i.localization.hourCycle="h24":i.localization.hourCycle===void 0&&(i.localization.hourCycle=r(i.localization.locale));this.optionsStore.options=i;i.restrictions.maxDate&&this.viewDate.isAfter(i.restrictions.maxDate)&&(this.viewDate=i.restrictions.maxDate.clone);i.restrictions.minDate&&this.viewDate.isBefore(i.restrictions.minDate)&&(this.viewDate=i.restrictions.minDate.clone)}_initializeInput(){if(this.optionsStore.element.tagName=="INPUT")this.optionsStore.input=this.optionsStore.element;else{const e=this.optionsStore.element.dataset.tdTargetInput;this.optionsStore.input=e==void 0||e=="nearest"?this.optionsStore.element.querySelector("input"):this.optionsStore.element.querySelector(e)}if(this.optionsStore.input){!this.optionsStore.input.value&&this.optionsStore.options.defaultDate&&(this.optionsStore.input.value=this.dates.formatInput(this.optionsStore.options.defaultDate));this.optionsStore.input.addEventListener("change",this._inputChangeEvent);if(this.optionsStore.options.allowInputToggle){this.optionsStore.input.addEventListener("click",this._openClickEvent);this.optionsStore.input.addEventListener("focus",this._openClickEvent)}this.optionsStore.input.value&&this._inputChangeEvent()}}_initializeToggle(){if(this.optionsStore.options.display.inline)return;let e=this.optionsStore.element.dataset.tdTargetToggle;e=="nearest"&&(e='[data-td-toggle="datetimepicker"]');this.optionsStore.toggle=e==void 0?this.optionsStore.element:this.optionsStore.element.querySelector(e);if(this.optionsStore.toggle!=void 0){this.optionsStore.toggle.addEventListener("click",this._toggleClickEvent);this.optionsStore.toggle!==this.optionsStore.element&&this.optionsStore.toggle.addEventListener("keydown",this._handleToggleKeydown.bind(this))}}
/**
     * If the option is enabled this will render the clock view after a date pick.
     * @param e change event
     * @private
     */_handleAfterChangeEvent(e){if(this.optionsStore.options.promptTimeOnDateChange&&!this.optionsStore.options.multipleDates&&!this.optionsStore.options.display.inline&&!this.optionsStore.options.display.sideBySide&&this.display._hasTime&&!this.display.widget?.getElementsByClassName(Namespace.css.show)[0].classList.contains(Namespace.css.timeContainer)&&!(!e.oldDate&&this.optionsStore.options.useCurrent||e.oldDate&&e.date?.isSame(e.oldDate))){clearTimeout(this._currentPromptTimeTimeout);this._currentPromptTimeTimeout=setTimeout((()=>{this.display.widget&&this._eventEmitters.action.emit({e:{currentTarget:this.display.widget.querySelector('[data-action="togglePicker"]')},action:T.togglePicker})}),this.optionsStore.options.promptTimeOnDateChangeTransitionDelay)}}_handleToggleKeydown(e){if(e.key===" "||e.key==="Enter"){this.optionsStore.toggle.click();e.stopPropagation();e.preventDefault()}}}const M={};
/**
 * Called from a locale plugin.
 * @param l locale object for localization options
 */const L=e=>{M[e.name]||(M[e.name]=e.localization)};
/**
 * A sets the global localization options to the provided locale name.
 * `loadLocale` MUST be called first.
 * @param l
 */const V=e=>{const t=M[e];t&&(p.localization=t)};
/**
 * Called from a plugin to extend or override picker defaults.
 * @param plugin
 * @param option
 */const A=function(e,t=void 0){if(!e)return $;if(!e.installed){e(t,{TempusDominus:TempusDominus,Dates:Dates,Display:Display,DateTime:DateTime,Namespace:Namespace},$);e.installed=true}return $};const O="v6.10.4";const $={TempusDominus:TempusDominus,extend:A,loadLocale:L,locale:V,Namespace:Namespace,DefaultOptions:p,DateTime:DateTime,Unit:a,version:O,DefaultEnLocalization:u};export{DateTime,u as DefaultEnLocalization,p as DefaultOptions,Namespace,TempusDominus,a as Unit,A as extend,L as loadLocale,V as locale,O as version};

